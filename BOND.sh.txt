#!/bin/bash


###----------------------------------------###
###
###  Barracuda-Octopus-Nginx-Drupal Tuner
###
###  Copyright (C) 2010-2011 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: http://code.aegir.cc/aegir
###
###----------------------------------------###


###----------------------------------------###
### HOW-TO: run it with bash, not with sh  ###
###----------------------------------------###
###
### $ bash BOND.sh.txt
###
### Note: to restore default values it is
###       enough to start this script with
###       any values defined below and answer
###       NO when it prompts for confirmation
###       "Are you ready to tune your Aegir".
###


###----------------------------------------###
### EDITME                                 ###
###----------------------------------------###
###
### Enter below the settings you wish to use.
###


###----------------------------------------###
### Hostmaster root directory - /var/aegir
###
### Note: most of values tuned by this script
###       are server-vide, while some, like
###       mod_evasive settings will affect
###       only sites hosted on the Aegir
###       Satellite Instance defined below.
###
_TUNE_HOSTMASTER=/data/disk/o1


###----------------------------------------###
### Nginx server mod_evasive - default ON
###
### Note: running verify task on any SITE
###       will restore default value ON
###       for that site only, while TUNER
###       will turn OFF/ON this feature
###       for all sites hosted on the
###       Hostmaster defined above.
###
_TUNE_NGINX_CONNECT=OFF


###----------------------------------------###
### Nginx server fastcgi timeout - default 300
###
### Note: running verify task on the SERVER
###       in the Hostmaster created
###       by Barracuda (not Octopus!)
###       will restore default value
###       for the server and all existing
###       Aegir Satellite Instances.
###
_TUNE_NGINX_TIMEOUT=3600


###----------------------------------------###
### Nginx server firewall limit - default 300
###
### Note: don't change the default value
###       if you are the only visitor, or
###       you will lock yourself easily.
###
###       The default value 300 means the
###       firewall limit is OFF because
###       it scans only the last 300 lines
###       of your web server log file.
###
###       If you will set this value to 100
###       then every visitor IP with more
###       than 100 out of the last 300
###       requests will be locked.
###
###       Only dynamic requests (pages) are
###       counted because static files like
###       images are generally not logged.
###
_TUNE_NGINX_FIREWALL=300


###----------------------------------------###
### Database server timeout - default 300
###
_TUNE_SQL_TIMEOUT=3600


###----------------------------------------###
### PHP-FPM server timeout - default 300
###
_TUNE_PHP_TIMEOUT=3600


###----------------------------------------###
### TUNER VERSION                          ###
###----------------------------------------###
###
### _AEGIR_VERSION=HEAD
### _AEGIR_VERSION=BOA-1.4S
###
_AEGIR_VERSION=HEAD


###----------------------------------------###
### FORCE PREFERRED GIT REPOSITORY         ###
###----------------------------------------###
###
### Use this when you are experiencing issues
### trying to connect to the default drupal
### repository. Valid options:
###
### _FORCE_GIT_MIRROR=drupal
### _FORCE_GIT_MIRROR=github
### _FORCE_GIT_MIRROR=gitorious
###
### Note: with forced mirror the script will
### not try to connect and then switch to
### alternate mirror. It will simply fail
### if the forced mirror doesn't respond.
###
_FORCE_GIT_MIRROR=""


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

_INSTALLER_VERSION=1.0-boa
_NOW=`date +%y%m%d-%H%M`
_RAM=`free -mto | grep Mem: | awk '{ print $2 }'`

###---### Functions
#
# Noticeable messages
msg () {
  echo "Tuner [`date`] ==> $*"
}
# Simple prompt
prompt_yes_no () {
  while true ; do
    printf "$* [Y/n] "
    read answer
    if [ -z "$answer" ] ; then
      return 0
    fi
    case $answer in
      [Yy]|[Yy][Ee][Ss])
        return 0
        ;;
      [Nn]|[Nn][Oo])
        return 1
        ;;
      *)
        echo "Please answer yes or no"
        ;;
    esac
 done
}
#
# Silent runner
st_runner () {
	CMD="$1"
	touch busy
	bash $_SRCDIR/spinner busy &
	if $CMD >> $_LOG; then
		rm busy
		sleep 1
		return 0
	else
		rm busy
		sleep 1
		echo "$CMD failed.  Error (if any): $?"
		echo " "
		echo "Displaying the last 15 lines of $_LOG to help troubleshoot this problem."
		echo "If you see any error with advice to run 'dpkg --configure -a', run this"
		echo "command first and choose default answer, then run this installer again."
		echo " "
		tail -15 $_LOG
		return 1
	fi
}
#
# Small spinner
mrun () {
	CMD="$1"
	touch busy
	bash $_SRCDIR/spinner busy &
	if $CMD >> $_LOG; then
		rm busy
		sleep 1
		return 0
	fi
}
#
restore_default_php () {
  cd /opt/etc
  cp -af php.ini php.ini-pre-tuner-$_INSTALLER_VERSION-$_NOW
  cp -af php-fpm.conf php-fpm.conf-pre-tuner-$_INSTALLER_VERSION-$_NOW
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/conf/php.ini ./
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/conf/php-fpm.conf ./
}
#
tune_php () {
  sed -i "s/300/$_TUNE_PHP_TIMEOUT/g" /opt/etc/php.ini
  sed -i "s/300/$_TUNE_PHP_TIMEOUT/g" /opt/etc/php-fpm.conf
}
#
restore_default_sql () {
  cd /etc/mysql
  mv -f my.cnf my.cnf-pre-$_INSTALLER_VERSION-$_NOW &> /dev/null
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/conf/my.cnf.txt ./
  mv -f my.cnf.txt my.cnf &> /dev/null
  _DB_SERVER_TEST=`mysql -V 2>&1`
  if [[ $_DB_SERVER_TEST =~ MariaDB ]] ; then
    _DB_SERVER=MariaDB
  else
    _DB_SERVER=Percona
  fi
  if [ "$_DB_SERVER" = "Percona" ]; then
    sed -i "s/default-table-type/\#default-table-type/g" /etc/mysql/my.cnf
    sed -i "s/language/\#language/g" /etc/mysql/my.cnf
  fi
  cd /var/xdrago
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/tools/auto-healing-monitoring/minute.sh ./
  sed -i "s/600/900/g" /var/xdrago/minute.sh
  chmod 700 /var/xdrago/minute.sh
}
#
tune_sql () {
  sed -i "s/900/$_TUNE_SQL_TIMEOUT/g" /etc/mysql/my.cnf
  sed -i "s/600/$_TUNE_SQL_TIMEOUT/g" /var/xdrago/minute.sh
}
#
restore_default_nginx () {
  cd /var/xdrago/firewall/check
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/tools/auto-healing-monitoring/firewall/check/scan_nginx ./
  if [ -d "$_TUNE_HOSTMASTER" ] ; then
    for Files in `find $_TUNE_HOSTMASTER/config/server_master/nginx/vhost.d -type f`
    do
      sed -i "s/#limit_conn/limit_conn/g" $Files
    done
  fi
  su -s /bin/bash aegir -c "drush @server_master provision-verify &> /dev/null"
  mrun "sleep 8"
}
#
tune_nginx () {
  sed -i "s/critnumber = 300/critnumber = $_TUNE_NGINX_FIREWALL/g" /var/xdrago/firewall/check/scan_nginx
  sed -i "s/300/$_TUNE_NGINX_TIMEOUT/g" /var/aegir/config/server_master/nginx.conf
  sed -i "s/180/$_TUNE_NGINX_TIMEOUT/g" /var/aegir/config/server_master/nginx.conf
  if [ "$_TUNE_NGINX_CONNECT" = "OFF" ] ; then
    sed -i "s/limit_conn/#limit_conn/g" /var/aegir/config/server_master/nginx.conf
    if [ -d "$_TUNE_HOSTMASTER" ] ; then
      for Files in `find $_TUNE_HOSTMASTER/config/server_master/nginx/vhost.d -type f`
      do
        sed -i "s/limit_conn/#limit_conn/g" $Files
      done
    fi
  fi
}
#
restart_services () {
  st_runner "invoke-rc.d php-fpm restart" &> /dev/null
  st_runner "invoke-rc.d mysql restart" &> /dev/null
  st_runner "invoke-rc.d nginx restart" &> /dev/null
  st_runner "bash /var/xdrago/FireStart" &> /dev/null
  st_runner "invoke-rc.d csf restart" &> /dev/null
}
#
tune_memory_limits () {
  _ETH_TEST=`ifconfig 2>&1`
  _VM_TEST=`uname -a 2>&1`
  if [[ $_ETH_TEST =~ venet0 ]] ; then
    _VMFAMILY="VZ"
  elif [ -e "/proc/bean_counters" ] ; then
    _VMFAMILY="VZ"
  elif [[ $_VM_TEST =~ beng ]] ; then
    _VMFAMILY="VS"
  elif [[ "$_THISHOST" =~ ".host8." ]] && [ -d "/boot/grub" ] ; then
    _VMFAMILY="TG"
  else
    _VMFAMILY="XEN"
  fi
  _RAM=`free -mto | grep Mem: | awk '{ print $2 }'`
  let "_USE = (($_RAM / 4))"
  if [[ "$_THISHOST" =~ ".host8." ]] ; then
    if [ "$_VMFAMILY" = "VS" ] && [ ! -d "/boot/grub" ] ; then
      let "_USE_SQL = (($_RAM / 32))"
    else
      let "_USE_SQL = (($_RAM / 6))"
    fi
  else
    let "_USE_SQL = (($_RAM / 4))"
  fi
  if [ "$_USE" -ge "512" ] && [ "$_USE" -lt "1024" ] ; then
    _USE_PHP=512
    _USE_APC=512
  elif [ "$_USE" -ge "1024" ] ; then
    if [ "$_VMFAMILY" = "XEN" ] ; then
      _USE_PHP=512
      _USE_APC=1024
      sed -i "s/max_children\">4/max_children\"\>8/g" /opt/etc/php-fpm.conf
      sed -i "s/worker_processes  4/worker_processes  8/g" /etc/nginx/nginx.conf
    elif [ "$_VMFAMILY" = "VS" ] || [ "$_VMFAMILY" = "TG" ] ; then
      _USE_PHP=512
      if [ -d "/boot/grub" ] ; then
        _USE_APC=1024
        sed -i "s/max_children\">4/max_children\"\>8/g" /opt/etc/php-fpm.conf
        sed -i "s/worker_processes  4/worker_processes  8/g" /etc/nginx/nginx.conf
      else
        _USE_APC=256
        sed -i "s/max_children\">4/max_children\"\>2/g" /opt/etc/php-fpm.conf
        sed -i "s/max_children\">8/max_children\"\>2/g" /opt/etc/php-fpm.conf
        sed -i "s/worker_processes  8/worker_processes  4/g" /etc/nginx/nginx.conf
      fi
    else
      _USE_PHP=256
      _USE_APC=128
    fi
  else
    _USE_PHP="$_USE"
    _USE_APC="$_USE"
  fi
  if [ "$_VMFAMILY" = "VZ" ] ; then
    _USE_APC=128
  fi
  let "_USE_FPM = (($_USE_PHP / 2))"
  if [ "$_USE_FPM" -lt "128" ] ; then
    _USE_FPM=128
  fi
  if [ "$_USE_PHP" -lt "256" ] ; then
    _USE_PHP=256
  fi
  sed -i "s/256/$_USE_FPM/g" /opt/etc/php.ini
  sed -i "s/888/$_USE_APC/g" /opt/etc/php.ini
  sed -i "s/256/$_USE_PHP/g" /usr/local/lib/php.ini
  sed -i "s/888/$_USE_SQL/g" /etc/mysql/my.cnf
}


###---### init
#
touch /var/run/octopus_barracuda.pid

###--------------------###
_DRUPAL_WORKS=NO
_GITORIOUS_WORKS=NO
_GITHUB_WORKS=NO
if [ "$_FORCE_GIT_MIRROR" = "drupal" ] ; then
  msg "INFO: We will use forced Drupal repository without testing connection"
  _DRUPAL_WORKS=YES
  _GITORIOUS_WORKS=NO
  _GITHUB_WORKS=NO
  sleep 3
elif [ "$_FORCE_GIT_MIRROR" = "github" ] ; then
  msg "INFO: We will use forced GitHub mirror without testing connection"
  _DRUPAL_WORKS=NO
  _GITORIOUS_WORKS=NO
  _GITHUB_WORKS=YES
  sleep 3
elif [ "$_FORCE_GIT_MIRROR" = "gitorious" ] ; then
  msg "INFO: We will use forced Gitorious mirror without testing connection"
  _DRUPAL_WORKS=NO
  _GITORIOUS_WORKS=YES
  _GITHUB_WORKS=NO
  sleep 3
else
  msg "INFO: Testing Drupal, GitHub and Gitorious servers availability, please wait..."
  sleep 3
  _DRUPAL_WORKS=YES
  _GITORIOUS_WORKS=YES
  _GITHUB_WORKS=YES
  if ! netcat -w 8 -z git.drupal.org 80 ; then
    _DRUPAL_WORKS=NO
    msg "WARN: The Drupal master repository server doesn't respond..."
  elif ! netcat -w 8 -z github.com 9418 ; then
    _GITHUB_WORKS=NO
    msg "WARN: The GitHub mirror repository server doesn't respond..."
  elif ! netcat -w 8 -z code.aegir.cc 9418 ; then
    _GITORIOUS_WORKS=NO
    msg "WARN: The Gitorious mirror repository server doesn't respond..."
  fi
fi
if [ $_DRUPAL_WORKS = "YES" ] ; then
  _BOA_REPO_NAME="barracuda"
  _BOA_REPO_GIT_URL="http://git.drupal.org/project"
  msg "INFO: Drupal master repository will be used for this install"
elif [ $_GITHUB_WORKS = "YES" ] ; then
  _BOA_REPO_NAME="nginx-for-drupal"
  _BOA_REPO_GIT_URL="git://github.com/omega8cc"
  msg "INFO: GitHub mirror repository will be used for this install"
elif [ $_GITORIOUS_WORKS = "YES" ] ; then
  _BOA_REPO_NAME="barracuda-octopus"
  _BOA_REPO_GIT_URL="git://code.aegir.cc/aegir"
  msg "INFO: Gitorious mirror repository will be used for this install"
else
  cat <<EOF

  None of repository servers respond in 8 seconds,
  so we can't continue this installation.

  Please try again later or check if your firewall has port 9418 open.

  Bye.

EOF
  exit 1
fi
_BOA_REPO_GIT_URLX=${_BOA_REPO_GIT_URL//\//\\\/}
#
#
if [ `whoami` = "root" ] ; then
  msg "STATUS: This script is ran as a root user."
else
  msg "ERROR: This script should be ran as a root user, please su - root first."
  msg "Bye."
  exit 1
fi
#
#
if [ ! -f "/var/aegir/config/includes/barracuda_log.txt" ] ; then
  msg "ERROR: This script should be used only when the same version of BARRACUDA was used before."
  msg "Your system has to be configured/upgraded by BARRACUDA version $_INSTALLER_VERSION first."
  msg "Bye."
  exit 1
else
  _VERSIONS_TEST=`cat /var/aegir/config/includes/barracuda_log.txt`
  if [[ $_VERSIONS_TEST =~ "$_INSTALLER_VERSION" ]] ; then
    _VERSIONS_TEST_RESULT=OK
  else
    msg "ERROR: This script should be used only when the same version of BARRACUDA was used before."
    msg "Your system has to be configured/upgraded by BARRACUDA version $_INSTALLER_VERSION first."
    msg "Bye."
    exit 1
  fi
fi
#
#
rm -f /var/run/aegir_upgrade.pid
rm -f /opt/tmp/testecho*
_SRCDIR=/opt/tmp/files
mkdir -p $_SRCDIR
chmod -R 777 /opt/tmp &> /dev/null
cd /opt/tmp
rm -f -r /opt/tmp/$_BOA_REPO_NAME
if [ "$_AEGIR_VERSION" = "HEAD" ]; then
  git clone $_BOA_REPO_GIT_URL/$_BOA_REPO_NAME.git &> /dev/null
else
  wget -q -U iCab http://files.aegir.cc/versions/nginx-for-drupal-$_AEGIR_VERSION.tar.gz
  gunzip -q -c nginx-for-drupal-$_AEGIR_VERSION.tar.gz | tar -xf -
  rm -f nginx-for-drupal-$_AEGIR_VERSION.tar.gz
  _BOA_REPO_NAME="nginx-for-drupal"
fi
#
# Get spinner
cd $_SRCDIR
rm -f spinner*
cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/spinner ./
chmod +x spinner &> /dev/null
#
# Create tmp stuff
_LOG=/opt/tmp/aegir-install.log
_SILENT=/opt/tmp/silent.log
#
#


###---### Tune Your Aegir Hosting System
#
mrun "sleep 3"
echo " "
msg "TUNER START -> checkpoint: "
cat <<EOF

  * Aegir Satellite Instance to tune: $_TUNE_HOSTMASTER
  * Nginx server mod_evasive will be set to $_TUNE_NGINX_CONNECT
  * Nginx server fastcgi timeout will be set to $_TUNE_NGINX_TIMEOUT seconds
  * Nginx firewall limit of allowed requests will be set to $_TUNE_NGINX_FIREWALL/300
  * Database server timeout will be set to $_TUNE_SQL_TIMEOUT seconds
  * PHP server timeout will be set to $_TUNE_PHP_TIMEOUT seconds

EOF
echo " "
if prompt_yes_no "Are you ready to tune your Aegir Hosting System with above values?" ; then
  true
  msg "STATUS: We will stop cron and then wait 30 seconds..."
  invoke-rc.d cron stop &> /dev/null
  mrun "sleep 30"
  msg "STATUS: Tuning in progress, please wait..."
  mrun "sleep 2"
  restore_default_php
  tune_php
  restore_default_sql
  tune_sql
  restore_default_nginx
  tune_nginx
  tune_memory_limits
  restart_services
  msg "STATUS: Tuning completed"
  mrun "sleep 2"
else
  msg "STATUS: We will stop cron and then wait 30 seconds..."
  invoke-rc.d cron stop &> /dev/null
  mrun "sleep 30"
  restore_default_php
  restore_default_sql
  restore_default_nginx
  tune_memory_limits
  restart_services
  msg "STATUS: Tuning stopped and default settings restored"
  mrun "sleep 2"
fi
rm -f -r /var/opt/*
rm -f -r /opt/tmp/*
rm -f /var/run/octopus_barracuda.pid
invoke-rc.d cron start &> /dev/null
msg "STATUS: Cron started again"
msg "BYE!"

###----------------------------------------###
###
###  Barracuda-Octopus-Nginx-Drupal Tuner
###  Copyright (C) 2010-2011 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###

