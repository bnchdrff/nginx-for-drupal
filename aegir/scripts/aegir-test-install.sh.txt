#!/bin/bash

# $Id$

########################################################################
# Aegir quick install script
#
# This script is just a wrapper to the hostmaster-install command, which
# is part of the provision module. It is designed to be quickly
# downloaded and ran as the Aegir user (created as per the INSTALL.txt)
# and bootstrap aegir by downloading drush and provision.
#
# The real work happens in PHP, within the hostmaster-install command.
#
# It should keep to strict POSIX shell syntax to ensure maximum
# portability. The aim here is to ease the burden allow people using
# various platforms to zip through the install quicker.
#
# This script also *DOES NOT CHECK* if the requirements specified in
# INSTALL.txt have been met.  It's up to the admin to follow the proper
# install instructions or use the packages provided by their platform.
########################################################################
# This script takes the following steps:
#
# 1. downloads drush in $AEGIR_HOME
# 2. downloads provision in $AEGIR_HOME/.drush
# 3. delegate the rest of the install to hostmaster-install
########################################################################
# basic variables, change before release
_AEGIR_VERSION=EDIT_AEGIR_VERSION
_DRUSH_VERSION=EDIT_DRUSH_VERSION
_DRUSH_FAMILY=EDIT_DRUSH_FAMILY
_BOA_REPO_GIT_URL=EDIT_BOA_REPO_GIT_URL
_BOA_REPO_NAME=EDIT_BOA_REPO_NAME
_THIS_DB_HOST=EDIT_THIS_DB_HOST

# when adding a variable here, add it to the display below

########################################################################
# functions

# noticeable messages
msg() {
  echo "==> $*"
}

########################################################################
# Main script

AEGIR_HOME="$HOME"
AEGIR_HOST=`uname -n`
DRUSH="$AEGIR_HOME/drush/drush.php"

if [ `whoami` = "root" ] ; then
  msg "This script should be ran as a non-root user"
  exit 1
fi

_RESOLVEIP=`resolveip $AEGIR_HOST 2> /dev/null`

if [ -z "$_RESOLVEIP" ] ; then
  msg "This server does not have a hostname that resolves to an IP address"
  exit 1
else
  AEGIR_HOST_IP=`echo $_RESOLVEIP | cut -d: -f2 | awk '{ print $6}'`
  true
fi

_MYSQLTEST=`mysql -h$AEGIR_HOST_IP  -uINVALIDLOGIN  -pINVALIDPASS 2>&1 >/dev/null | cat`

if [ -z `echo $_MYSQLTEST | grep -q "ERROR \(2003\|1130\)"` ] ; then
  msg  "MySQL is listening on $AEGIR_HOST_IP."
  true
else
  msg "MySQL is not configured to listen on $AEGIR_HOST_IP."
  exit 1
fi

msg "This script makes the following assumptions: "
cat <<EOF
 * you have read INSTALL.txt and prepared the platform accordingly
 * you are running as your "aegir" user
EOF

AEGIR_DB_USER=aegir_root
_REL_VERSION=`lsb_release -sc`
if [ "$_REL_VERSION" = "oneiric" ] ; then
  AEGIR_DB_PASS=`echo $RANDOM:\`date\`:$AEGIR_HOST | openssl md5 | awk '{ print $2}'`
else
  AEGIR_DB_PASS=`echo $RANDOM:\`date\`:$AEGIR_HOST | openssl md5`
fi

msg "Aegir will now generate a mysql super user password for you: "
cat <<EOF
  Username : $AEGIR_DB_USER
  Password : $AEGIR_DB_PASS
  Hostname : $AEGIR_HOST ($AEGIR_HOST_IP)
EOF

mysql -uroot mysql<<EOFMYSQL
GRANT ALL PRIVILEGES ON *.* TO '$AEGIR_DB_USER'@'$AEGIR_HOST' IDENTIFIED BY '$AEGIR_DB_PASS' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO '$AEGIR_DB_USER'@'$AEGIR_HOST_IP' IDENTIFIED BY '$AEGIR_DB_PASS' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO '$AEGIR_DB_USER'@'localhost' IDENTIFIED BY '$AEGIR_DB_PASS' WITH GRANT OPTION;
EOFMYSQL

# we need to check both because some platforms (like SunOS) return 0 even if the binary is not found
if which drush 2> /dev/null && which drush | grep -v 'no drush in' > /dev/null; then
  msg "Drush is in the path, good"
  DRUSH=drush
elif [ -x $DRUSH ] ; then
  msg "Drush found in $DRUSH, good"
  DRUSH="php $AEGIR_HOME/drush/drush.php"
else
  msg "Installing drush in $AEGIR_HOME"
  cd $AEGIR_HOME
  if [ $_DRUSH_VERSION = "HEAD" ] ; then
    git clone http://git.drupal.org/project/drush.git &> /dev/null
  else
    wget -q -U iCab http://ftp.drupal.org/files/projects/drush-$_DRUSH_VERSION.tar.gz
    tar -xzf drush-$_DRUSH_VERSION.tar.gz
    rm -f drush-$_DRUSH_VERSION.tar.gz
  fi
  DRUSH="php $AEGIR_HOME/drush/drush.php"
fi

if $DRUSH help > /dev/null ; then
  msg "Drush seems to be functioning properly"
else
  msg "Drush is broken ($DRUSH help failed)"
  exit 1
fi

if $DRUSH help | grep "^ provision-install" > /dev/null ; then
  msg "Provision already seems to be installed"
else
  msg "Installing provision backend in $AEGIR_HOME/.drush"
  mkdir -p $AEGIR_HOME/.drush
  if [ "$_AEGIR_VERSION" = "HEAD" ]; then
    if [ "$_BOA_REPO_NAME" = "barracuda" ] || [ "$_BOA_REPO_NAME" = "octopus" ] ; then
      _BOA_REPO_GIT_URL_LOCAL="http://git.drupal.org/sandbox/omega8cc"
      git clone $_BOA_REPO_GIT_URL_LOCAL/1074910.git $AEGIR_HOME/.drush/provision &> /dev/null
      _BOA_REPO_GIT_URL_Q=${_BOA_REPO_GIT_URL_LOCAL//\//\\\/}
      sed -i "s/MAKEFILE_REPO_GIT_URL/$_BOA_REPO_GIT_URL_Q/g" $AEGIR_HOME/.drush/provision/aegir.make
      sed -i "s/hostmaster.git/1074912.git/g" $AEGIR_HOME/.drush/provision/aegir.make
      rm -f -r $AEGIR_HOME/.drush/provision/.git
    else
      git clone $_BOA_REPO_GIT_URL/provision.git $AEGIR_HOME/.drush/provision
      _BOA_REPO_GIT_URL_Q=${_BOA_REPO_GIT_URL//\//\\\/}
      sed -i "s/MAKEFILE_REPO_GIT_URL/$_BOA_REPO_GIT_URL_Q/g" $AEGIR_HOME/.drush/provision/aegir.make
      rm -f -r $AEGIR_HOME/.drush/provision/.git
    fi
  else
    cd $AEGIR_HOME/.drush
    wget -q -U iCab http://files.aegir.cc/versions/provision-$_AEGIR_VERSION.tar.gz
    gunzip -q -c provision-$_AEGIR_VERSION.tar.gz | tar -xf -
    rm -f provision-$_AEGIR_VERSION.tar.gz
  fi
fi

msg "Installing the frontend"
AEGIROOT="$AEGIR_HOME/hostmaster-$_AEGIR_VERSION"
$DRUSH hostmaster-install --aegir_host=$AEGIR_HOST --aegir_db_user=$AEGIR_DB_USER --aegir_db_pass=$AEGIR_DB_PASS --aegir_root=$AEGIR_HOME --root=$AEGIROOT --version=$_AEGIR_VERSION $@
