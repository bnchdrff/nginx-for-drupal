#!/bin/bash


###----------------------------------------###
###
###  Octopus Aegir Installer
###
###  Copyright (C) 2010-2011 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: http://code.aegir.cc/aegir
###
###----------------------------------------###


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

_INSTALLER_VERSION=EDIT_INSTALLER_VERSION


###---### distro config
#
_SMALLCORE6=EDIT_SMALLCORE6
_SMALLCORE7=EDIT_SMALLCORE7
_COMMONS=EDIT_COMMONS
_DRUPAL5=EDIT_DRUPAL5
_DRUPAL7=EDIT_DRUPAL7
_MANAGINGNEWS=EDIT_MANAGINGNEWS
_OPENATRIUM=EDIT_OPENATRIUM
_OPENPUBLISH=EDIT_OPENPUBLISH
_OPENSCHOLAR=EDIT_OPENSCHOLAR
_PROSEPOINT=EDIT_PROSEPOINT
_UBERCART=EDIT_UBERCART
_NODESTREAM=EDIT_NODESTREAM
_COMMERCE=EDIT_COMMERCE
_OPENPUBLIC=EDIT_OPENPUBLIC
_COD=EDIT_COD
_OPENENTERPRISE=EDIT_OPENENTERPRISE
_CIVICRM6=EDIT_CIVICRM6
_CIVICRM7=EDIT_CIVICRM7
_VIDEOLA=EDIT_VIDEOLA
_OPENCHURCH=EDIT_OPENCHURCH
_ACQUIA_SEVEN=EDIT_ACQUIA_SEVEN


###---### main config
#
_TEST_MODE=EDIT_TEST_MODE
_DISTRO=EDIT_DISTRO
_HM_DISTRO=EDIT_HM_DISTRO
_LAST_HMR=EDIT_LAST_HMR
_USER=EDIT_USER
_DOMAIN=EDIT_DOMAIN
_WEBG=EDIT_WEBG
_ROOT="/data/disk/$_USER"
_AEGIR_ROOT="$_ROOT/aegir/distro/$_HM_DISTRO"
_DRUSHCMD="php $_ROOT/tools/drush/drush.php"
_STATUS=INIT
_LASTNUM=EDIT_LASTNUM
_PREV_AEGIR_ROOT="$_ROOT/aegir/distro/$_LAST_HMR"
_ADM_EMAIL="EDIT_MY_EMAIL"
_CLIENT_EMAIL="EDIT_CLIENT_EMAIL"
_CLIENT_OPTION=EDIT_CLIENT_OPTION
_CLIENT_CORES=EDIT_CLIENT_CORES
_AEGIR_VERSION=EDIT_AEGIR_VERSION
_DRUSH_VERSION=EDIT_DRUSH_VERSION
_DRUSH_FAMILY=EDIT_DRUSH_FAMILY
_DEBUG_MODE=EDIT_DEBUG_MODE
_NOW=`date +%y%m%d-%H%M`
_BOA_REPO_GIT_URL=EDIT_BOA_REPO_GIT_URL
_BOA_REPO_NAME=EDIT_BOA_REPO_NAME
_THIS_DB_HOST=EDIT_THIS_DB_HOST
_PLATFORMS_LIST="EDIT_PLATFORMS_LIST"
_AUTOPILOT=EDIT_AUTOPILOT
_HM_ONLY=EDIT_HM_ONLY
_HTTP_WILDCARD=EDIT_HTTP_WILDCARD


###---### Functions
#
# noticeable messages
msg() {
  echo "Octopus [`date`] ==> $*"
}
#
# Success msg
success () {
	msg "$1 Succeeded."
}
#
# Error msg
fatal () {
	echo " "
	msg "Fatal Error Occurred: $1"
	msg "Cannot continue installation."
	exit 1
}
#
# Perform an action, log it, and run the spinner throughout
runner () {
	CMD="$1"
	touch busy
	bash $_SRCDIR/spinner busy &
	if $CMD >> $_LOG; then
		rm busy
		sleep 1
		success "$CMD:"
		return 0
	else
		rm busy
		sleep 1
		echo "$CMD failed.  Error (if any): $?"
		echo " "
		echo "Displaying the last 15 lines of $_LOG to help troubleshoot this problem:"
		tail -15 $_LOG
		return 1
	fi
}
#
# Small spinner
mrun () {
	CMD="$1"
	touch busy
	bash $_SRCDIR/spinner busy &
	if $CMD >> $_LOG; then
		rm busy
		sleep 1
		return 0
	fi
}
#
# stop on error
# set -e ### disabled for debugging
#
_SRCDIR=/opt/tmp/files
_LOG=/opt/tmp/aegir-install.log
#
msg "$_STATUS B: Aegir automated install script part B"
if [ `whoami` = "root" ] ; then
  msg "$_STATUS B: This script should be ran as a non-root user - exit now"
  exit 1
fi


###---### Checking status..
#
msg "$_STATUS B: Checking status.."
mrun "sleep 3"
if [ -e "$_ROOT/aegir.sh" ] ; then
_STATUS=UPGRADE
cd $_ROOT
# msg "$_STATUS B: _STATUS is $_STATUS"
# if [ -d "$_PREV_AEGIR_ROOT" ] ; then
#   msg "$_STATUS B: aegir backup now.."
#   mrun "sleep 3"
#   cd $_PREV_AEGIR_ROOT
#   $_DRUSHCMD --root=$_PREV_AEGIR_ROOT provision-backup $_DOMAIN -d
#   msg "$_STATUS B: aegir backup completed"
# fi
# else
# msg "$_STATUS B: _STATUS is $_STATUS"
fi


###---### Add required users and create directories
#
msg "$_STATUS B: Create dirs and/or set good permissions"
mrun "sleep 3"
if [ -e "$_ROOT/aegir.sh" ] ; then
 rm -f $_ROOT/aegir.sh
fi
touch $_ROOT/aegir.sh
chmod 0755 $_ROOT/aegir.sh &> /dev/null
echo -e "#!/bin/sh\n\n$_DRUSHCMD '@hostmaster' hosting-dispatch\ntouch $_ROOT/$_USER-task.done" | tee -a $_ROOT/aegir.sh >/dev/null 2>&1

mkdir -p $_ROOT/aegir/distro
mkdir -p $_ROOT/distro/$_DISTRO
mkdir -p $_ROOT/src/$_DISTRO
mkdir -p $_ROOT/src/modules
mkdir -p $_ROOT/src/themes
mkdir -p $_ROOT/tools
mkdir -p $_ROOT/log
mkdir -p $_ROOT/u
mkdir -p $_ROOT/backups
chmod 0711 $_ROOT/aegir/distro &> /dev/null
chmod 0711 $_ROOT/distro/$_DISTRO &> /dev/null
chmod 0711 $_ROOT/aegir &> /dev/null
chmod 0711 $_ROOT/tools &> /dev/null
chmod 0771 $_ROOT/u &> /dev/null
chmod 0711 $_ROOT/distro &> /dev/null
chmod 0700 $_ROOT/log &> /dev/null
chmod 0700 $_ROOT/src &> /dev/null
chmod 0700 $_ROOT/src/$_DISTRO &> /dev/null
chmod 0700 $_ROOT/src/modules &> /dev/null
chmod 0700 $_ROOT/src/themes &> /dev/null
chmod 0700 $_ROOT/backups &> /dev/null

if [ $_STATUS = "UPGRADE" ] ; then
 msg "$_STATUS B: UPGRADE in progress.."
 if [ -d "$_ROOT/distro" ] ; then
  msg "$_STATUS B: UPGRADE v.2 in progress.."
  if [ -e "$_ROOT/log/domain.txt" ] ; then
   _DOMAIN=`cat $_ROOT/log/domain.txt`
   _DOMAIN=`echo -n $_DOMAIN | tr -d "\n"`
  fi
  msg "$_STATUS B: RAW _DOMAIN is $_DOMAIN"
 elif [ ! -d "$_ROOT/distro" ] ; then
  msg "$_STATUS B: UPGRADE v.1 in progress.."
  msg "$_STATUS B: _DISTRO is $_DISTRO"
  if [ -e "$_ROOT/log/domain.txt" ] ; then
   _DOMAIN=`cat $_ROOT/log/domain.txt`
   _DOMAIN=`echo -n $_DOMAIN | tr -d "\n"`
  fi
  msg "$_STATUS B: RAW _DOMAIN is $_DOMAIN"
 fi
else
 msg "$_STATUS B: NEW AEGIR setup in progress.."
 msg "$_STATUS B: _DISTRO is $_DISTRO"
 msg "$_STATUS B: RAW _DOMAIN is $_DOMAIN"
fi
echo $_DOMAIN > $_ROOT/log/domain.txt


###---### Run standard installer
#
msg "$_STATUS B: Run standard installer"
mrun "sleep 3"
if [ $_STATUS = "UPGRADE" ] ; then
  mkdir -p $_ROOT/backups/system
  chmod 700 $_ROOT/backups/system
  if [ -d "$_ROOT/aegir/config" ] ; then
    if [ ! -d "$_ROOT/config" ] ; then
      cd $_ROOT/aegir
      mv -f config $_ROOT/config &> /dev/null
      ln -s $_ROOT/config $_ROOT/aegir/config
    fi
  fi
  if [ -d "$_ROOT/tools/drush" ] ; then
    cd $_ROOT/tools
    mv -f drush $_ROOT/backups/system/drush-pre-$_DISTRO-$_NOW &> /dev/null
  fi
fi
cd $_ROOT/tools
if [ $_DRUSH_VERSION = "HEAD" ] ; then
  git clone http://git.drupal.org/project/drush.git &> /dev/null
else
  wget -q -U iCab http://ftp.drupal.org/files/projects/drush-$_DRUSH_VERSION.tar.gz
  tar -xzf drush-$_DRUSH_VERSION.tar.gz
  rm -f drush-$_DRUSH_VERSION.tar.gz
fi
if [ $_DRUSH_FAMILY = "3" ] ; then
  cd $_ROOT/tools/drush
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/user.drush.inc.patch ./
  patch -p0 < user.drush.inc.patch &> /dev/null
fi
# if [ $_DRUSH_VERSION = "7.x-4.6" ] ; then
#   cd $_ROOT/tools/drush
#   wget -q -U iCab http://drupal.org/files/issues/alias-name-drush4.patch
#   patch -R -p1 < alias-name-drush4.patch &> /dev/null
# fi
if $_DRUSHCMD help > /dev/null ; then
  msg "$_STATUS B: Drush seems to be functioning properly"
else
  msg "$_STATUS B: Drush is broken ($DRUSH help failed)"
  exit 1
fi
if [ $_STATUS = "UPGRADE" ] ; then
  mkdir -p $_ROOT/backups/system
  chmod 700 $_ROOT/backups/system
  if [ -e "$_ROOT/.drush/provision" ] ; then
    mv -f $_ROOT/.drush/provision $_ROOT/backups/system/provision-pre-$_DISTRO-$_NOW &> /dev/null
  fi
  if [ -e "$_ROOT/.drush/drush_make" ] ; then
    mv -f $_ROOT/.drush/drush_make $_ROOT/backups/system/drush_make-pre-$_DISTRO-$_NOW &> /dev/null
  fi
  if [ -e "$_ROOT/.drush/provision_boost" ] ; then
    mv -f $_ROOT/.drush/provision_boost $_ROOT/backups/system/provision_boost-pre-$_DISTRO-$_NOW &> /dev/null
  fi
  if [ -e "$_ROOT/.drush/provision_civicrm" ] ; then
    mv -f $_ROOT/.drush/provision_civicrm $_ROOT/backups/system/provision_civicrm-pre-$_DISTRO-$_NOW &> /dev/null
  fi
fi
msg "$_STATUS B: Installing provision backend in $_ROOT/.drush"
mkdir -p $_ROOT/.drush
cd $_ROOT/.drush
if [ $_AEGIR_VERSION = "HEAD" ]; then
  if [ "$_BOA_REPO_NAME" = "barracuda" ] || [ "$_BOA_REPO_NAME" = "octopus" ] ; then
    _BOA_REPO_GIT_URL_LOCAL="http://git.drupal.org/sandbox/omega8cc"
    git clone $_BOA_REPO_GIT_URL_LOCAL/1074910.git $_ROOT/.drush/provision &> /dev/null
    _BOA_REPO_GIT_URL_Q=${_BOA_REPO_GIT_URL_LOCAL//\//\\\/}
    sed -i "s/MAKEFILE_REPO_GIT_URL/$_BOA_REPO_GIT_URL_Q/g" $_ROOT/.drush/provision/aegir.make
    sed -i "s/hostmaster.git/1074912.git/g" $_ROOT/.drush/provision/aegir.make
    rm -f -r $_ROOT/.drush/provision/.git
  else
    git clone $_BOA_REPO_GIT_URL/provision.git &> /dev/null
    _BOA_REPO_GIT_URL_Q=${_BOA_REPO_GIT_URL//\//\\\/}
    sed -i "s/MAKEFILE_REPO_GIT_URL/$_BOA_REPO_GIT_URL_Q/g" $_ROOT/.drush/provision/aegir.make
    rm -f -r $_ROOT/.drush/provision/.git
  fi
  if [ $_STATUS = "UPGRADE" ] ; then
    wget -q -U iCab http://ftp.drupal.org/files/projects/drush_make-6.x-2.3.tar.gz
    tar -xzf drush_make-6.x-2.3.tar.gz
    rm -f drush_make-6.x-2.3.tar.gz
  fi
  if [ "$_CLIENT_CORES" -ge "2" ] && [ "$_CLIENT_OPTION" = "SSD" ] && [[ "$_DOMAIN" =~ ".host8." ]] ; then
    _ALLOW_CIVICRM=YES
  elif [ "$_CLIENT_CORES" -ge "4" ] && [ "$_CLIENT_OPTION" != "SSD" ] ; then
    if [[ "$_DOMAIN" =~ ".host8." ]] ; then
      _ALLOW_CIVICRM=NO
    else
      _ALLOW_CIVICRM=YES
    fi
  else
    _ALLOW_CIVICRM=NO
  fi
  if [ "$_ALLOW_CIVICRM" = "YES" ] ; then
    git clone http://git.drupal.org/project/provision_civicrm.git $_ROOT/.drush/provision_civicrm &> /dev/null
    rm -f -r $_ROOT/.drush/provision_civicrm/.git
  fi
else
  wget -q -U iCab http://files.aegir.cc/versions/provision-$_AEGIR_VERSION.tar.gz
  tar -xzf provision-$_AEGIR_VERSION.tar.gz
  rm provision-$_AEGIR_VERSION.tar.gz
  if [ $_STATUS = "UPGRADE" ] ; then
    wget -q -U iCab http://ftp.drupal.org/files/projects/drush_make-6.x-2.3.tar.gz
    tar -xzf drush_make-6.x-2.3.tar.gz
    rm -f drush_make-6.x-2.3.tar.gz
  fi
  if [ "$_CLIENT_CORES" -ge "2" ] && [ "$_CLIENT_OPTION" = "SSD" ] && [[ "$_DOMAIN" =~ ".host8." ]] ; then
    _ALLOW_CIVICRM=YES
  elif [ "$_CLIENT_CORES" -ge "4" ] && [ "$_CLIENT_OPTION" != "SSD" ] ; then
    if [[ "$_DOMAIN" =~ ".host8." ]] ; then
      _ALLOW_CIVICRM=NO
    else
      _ALLOW_CIVICRM=YES
    fi
  else
    _ALLOW_CIVICRM=NO
  fi
  if [ "$_ALLOW_CIVICRM" = "YES" ] ; then
    git clone http://git.drupal.org/project/provision_civicrm.git $_ROOT/.drush/provision_civicrm &> /dev/null
    rm -f -r $_ROOT/.drush/provision_civicrm/.git
  fi
fi
if [ $_HTTP_WILDCARD = "YES" ] ; then
  sed -i "s/\!empty.*';/'*';/g" $_ROOT/.drush/provision/http/nginx/server.tpl.php &> /dev/null
  sed -i "s/\!empty.*';/'*';/g" $_ROOT/.drush/provision/http/nginx/vhost.tpl.php &> /dev/null
  sed -i "s/\!empty.*';/'*';/g" $_ROOT/.drush/provision/http/nginx/vhost_disabled.tpl.php &> /dev/null
fi


###---### Build Aegir base
#
msg "$_STATUS B: Build Aegir base"
mrun "sleep 3"
_LOCAL_STATUS="$_STATUS"
if [ -e "/var/run/aegir_upgrade.pid" ] ; then
  _LOCAL_STATUS=INIT
fi
if [ $_LOCAL_STATUS = "INIT" ] ; then
  msg "$_STATUS B: INIT"
  mrun "sleep 3"
  cd $_ROOT
  AGRPXSWD=`cat $_ROOT/.$_USER.pass.txt`
  AGRPASWD=`echo -n $AGRPXSWD | tr -d "\n"`
  AEGIR_HOST=`uname -n`
  msg "$_STATUS B: Deploying hostmaster application init, please wait..."
  if [ "$_DEBUG_MODE" = "YES" ] ; then
    $_DRUSHCMD hostmaster-install $_DOMAIN --aegir_host=$AEGIR_HOST --aegir_db_user=$_USER --aegir_db_pass=$AGRPASWD --aegir_root=$_ROOT --root=$_AEGIR_ROOT --http_service_type=nginx --db_service_type=mysql --db_port=3306 --aegir_db_host=$_THIS_DB_HOST --client_email=$_ADM_EMAIL --script_user=$_USER --web_group=$_WEBG --version=$_AEGIR_VERSION --profile=hostmaster -y -d
  else
    $_DRUSHCMD hostmaster-install $_DOMAIN --aegir_host=$AEGIR_HOST --aegir_db_user=$_USER --aegir_db_pass=$AGRPASWD --aegir_root=$_ROOT --root=$_AEGIR_ROOT --http_service_type=nginx --db_service_type=mysql --db_port=3306 --aegir_db_host=$_THIS_DB_HOST --client_email=$_ADM_EMAIL --script_user=$_USER --web_group=$_WEBG --version=$_AEGIR_VERSION --profile=hostmaster -y >$_ROOT/log/install.log 2>&1
  fi
  mrun "sleep 3"
  cd $_AEGIR_ROOT
  mkdir -p sites/$_DOMAIN/files/tmp
  mkdir -p sites/$_DOMAIN/files/js
  mkdir -p sites/$_DOMAIN/files/css
  chmod 2770 -R sites/$_DOMAIN/files &> /dev/null
  chgrp -R $_WEBG sites/$_DOMAIN/files &> /dev/null
  rm -f $_ROOT/u/$_DOMAIN
  ln -s $_AEGIR_ROOT $_ROOT/u/$_DOMAIN
  rm -f /data/u/$_DOMAIN
  ln -s $_AEGIR_ROOT /data/u/$_DOMAIN
  msg "$_STATUS B: Deploying hostmaster application done"
  mrun "sleep 3"
  msg "$_STATUS B: Running hosting-dispatch (1/3), please wait..."
  mrun "sleep 3"
  drush '@hostmaster' hosting-dispatch &> /dev/null
  msg "$_STATUS B: Running hosting-dispatch (2/3), please wait..."
  mrun "sleep 8"
  drush '@hostmaster' hosting-dispatch &> /dev/null
  msg "$_STATUS B: Running hosting-dispatch (3/3), please wait..."
  mrun "sleep 8"
  drush '@hostmaster' hosting-dispatch &> /dev/null
else
  if [ -d "$_AEGIR_ROOT" ] ; then
    msg "$_STATUS B: FATAL ERROR: $_AEGIR_ROOT already exist! Exiting.."
    exit 1
  fi
  msg "$_STATUS B: Hostmaster STATUS: upgrade start, please wait..."
  mrun "sleep 3"
  export DEBIAN_FRONTEND=noninteractive
  cd $_PREV_AEGIR_ROOT
  if [ "$_DEBUG_MODE" = "YES" ] ; then
    $_DRUSHCMD hostmaster-migrate $_DOMAIN $_AEGIR_ROOT -y -d
  else
    $_DRUSHCMD hostmaster-migrate $_DOMAIN $_AEGIR_ROOT -y &> /dev/null
  fi
  export DEBIAN_FRONTEND=text
  rm -f $_ROOT/u/$_DOMAIN
  ln -s $_AEGIR_ROOT $_ROOT/u/$_DOMAIN
  rm -f /data/u/$_DOMAIN
  ln -s $_AEGIR_ROOT /data/u/$_DOMAIN
  msg "$_STATUS B: Hostmaster STATUS: upgrade completed"
fi


###--------------------###
msg "$_STATUS B: Simple check if Aegir install or upgrade is successful"
mrun "sleep 3"
if [ -e "$_AEGIR_ROOT/sites/$_DOMAIN/settings.php" ] ; then
  msg "$_STATUS B: Aegir setup test OK"
else
  msg "$_STATUS B: FATAL ERROR: Something is wrong, Aegir not ready - exit now"
  exit 1
fi


### fix for typo http://drupal.org/node/979656
#
# cd $_ROOT/.drush/drush_make
# cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/drush-remote_make_files.patch ./
# patch -p0 < drush-remote_make_files.patch &> /dev/null
#
###


###---### Enhance Aegir UI
#
msg "$_STATUS B: Enhance Aegir UI"
mrun "sleep 3"
cd $_AEGIR_ROOT/profiles/hostmaster/themes/eldir
cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/eldir.patch ./
patch -p1 <./eldir.patch &> /dev/null
mkdir -p $_AEGIR_ROOT/sites/all/modules
cd $_AEGIR_ROOT/sites/all/modules
wget -q -U iCab http://files.aegir.cc/dev/aegir_custom_settings-6.x-1.8.tar.gz
tar -xzf aegir_custom_settings-6.x-1.8.tar.gz
rm -f aegir_custom_settings-6.x-1.8.tar.gz
if [ ! -e "$_AEGIR_ROOT/modules/o_contrib" ] ; then
  ln -s /data/all/001/o_contrib $_AEGIR_ROOT/modules/o_contrib &> /dev/null
fi
cd $_AEGIR_ROOT/sites/$_DOMAIN
if [ -e "$_AEGIR_ROOT/sites/$_DOMAIN/settings.php" ] ; then
  DRUSHC="$_ROOT/tools/drush/drush"
  $_DRUSHCMD dl --destination=$_AEGIR_ROOT/sites/all/modules features-6.x-1.0 features_extra-6.x-1.x-dev ctools-6.x-1.8 hosting_backup_gc-6.x-1.0 hosting_backup_queue-6.x-1.0-beta4 hosting_upload-6.x-1.x -y &> /dev/null
  $_DRUSHCMD en hosting_client -y &> /dev/null
  $_DRUSHCMD en css_emimage -y &> /dev/null
  $_DRUSHCMD en syslog -y &> /dev/null
  $_DRUSHCMD dis cache -y &> /dev/null
  $_DRUSHCMD dis path_alias_cache -y &> /dev/null
  $_DRUSHCMD vset --always-set hosting_client_register_user 1 &> /dev/null
  $_DRUSHCMD vset --always-set hosting_admin_client 1 &> /dev/null
  $_DRUSHCMD vset --always-set hosting_client_send_welcome 1 &> /dev/null
  $_DRUSHCMD vset --always-set client 1 &> /dev/null
  $_DRUSHCMD vset --always-set hosting_feature_client 1 &> /dev/null
  $_DRUSHCMD vset --always-set clone 1 &> /dev/null
  $_DRUSHCMD vset --always-set hosting_client_send_welcome 1 &> /dev/null
  if [ ! -e "$_ROOT/log/custom_cron" ] ; then
    $_DRUSHCMD vset --always-set hosting_queue_cron_frequency 3600 &> /dev/null
    $_DRUSHCMD vset --always-set hosting_cron_use_backend 0 &> /dev/null
  fi
  $_DRUSHCMD vset --always-set hosting_queue_tasks_frequency 5 &> /dev/null
  $_DRUSHCMD vset --always-set hosting_queue_tasks_items 1 &> /dev/null
  $_DRUSHCMD vset --always-set hosting_alias_automatic_no_www 1 &> /dev/null
  $_DRUSHCMD vset --always-set hosting_alias_automatic_www 1 &> /dev/null
  $_DRUSHCMD vset --always-set hosting_upload_platform_path "/data/disk/$_USER/static" &> /dev/null
  $_DRUSHCMD vset --always-set hosting_upload_upload_path "sites/$_DOMAIN/files/deployment" &> /dev/null
  $_DRUSHCMD en aegir_custom_settings -y &> /dev/null
  $_DRUSHCMD fr aegir_custom_settings -y &> /dev/null
  sed -i "s/320px/640px/g" $_AEGIR_ROOT/profiles/hostmaster/themes/eldir/style.css &> /dev/null
  if [ $_LOCAL_STATUS = "INIT" ] ; then
    $_DRUSHCMD vset --always-set site_name "Aegir Hosting System by Octopus" &> /dev/null
    $_DRUSHCMD vset --always-set site_mail "$_ADM_EMAIL" &> /dev/null
    $_DRUSHCMD vset --always-set site_footer "Daily Usage Monitor (scheduled) | Disk <strong>*</strong> MB | Databases <strong>*</strong> MB" &> /dev/null
    cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/make_home.php.txt ./
    mv -f make_home.php.txt make_home.php &> /dev/null
    $DRUSHC php-script make_home &> /dev/null
    rm -f make_home.php
    if [ $_DRUSH_FAMILY = "3" ] ; then
      cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/make_client_3.php.txt ./
      mv -f make_client_3.php.txt make_client.php &> /dev/null
    else
      cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/make_client.php.txt ./
      mv -f make_client.php.txt make_client.php &> /dev/null
    fi
    $DRUSHC sqlq "UPDATE {hosting_platform} SET status=-1 WHERE nid=5" &> /dev/null
    $DRUSHC php-script make_client $_CLIENT_EMAIL &> /dev/null
    rm -f make_client.php
    $DRUSHC urol "admin" --mail=$_CLIENT_EMAIL &> /dev/null
    $DRUSHC urol "aegir account manager" --mail=$_CLIENT_EMAIL &> /dev/null
  fi
fi


###---### Aegir global.inc file
#
msg "$_STATUS B: Aegir global.inc file"
cd $_ROOT
if [ -e "/data/conf/global.inc" ] ; then
  rm -f $_ROOT/config/includes/global.inc
  ln -s /data/conf/global.inc $_ROOT/config/includes/global.inc
else
  rm -f $_ROOT/config/includes/global.inc
  cd /data/conf
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/conf/global.inc.aegir.txt ./
  mv -f global.inc.aegir.txt global.inc &> /dev/null
  ln -s /data/conf/global.inc $_ROOT/config/includes/global.inc
fi


###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright (C) 2010-2011 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###

