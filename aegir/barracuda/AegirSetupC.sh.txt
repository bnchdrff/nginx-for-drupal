#!/bin/bash


###----------------------------------------###
###
###  Octopus Aegir Installer
###
###  Copyright (C) 2010-2011 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: http://code.aegir.cc/aegir
###
###----------------------------------------###


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

_INSTALLER_VERSION=EDIT_INSTALLER_VERSION


###---### distro config
#
_SMALLCORE6=EDIT_SMALLCORE6
_SMALLCORE7=EDIT_SMALLCORE7
_COMMONS=EDIT_COMMONS
_DRUPAL5=EDIT_DRUPAL5
_DRUPAL7=EDIT_DRUPAL7
_DRUPAL7D="EDIT_DRUPAL7-dev"
_DRUPAL7S="EDIT_DRUPAL7-stage"
_DRUPAL7P="EDIT_DRUPAL7-prod"
_MANAGINGNEWS=EDIT_MANAGINGNEWS
_OPENATRIUM=EDIT_OPENATRIUM
_OPENPUBLISH=EDIT_OPENPUBLISH
_OPENSCHOLAR=EDIT_OPENSCHOLAR
_PROSEPOINT=EDIT_PROSEPOINT
_UBERCART=EDIT_UBERCART
_NODESTREAM=EDIT_NODESTREAM
_COMMERCE=EDIT_COMMERCE
_OPENPUBLIC=EDIT_OPENPUBLIC
_COD=EDIT_COD
_OPENENTERPRISE=EDIT_OPENENTERPRISE
_CIVICRM6=EDIT_CIVICRM6
_CIVICRM7=EDIT_CIVICRM7
_VIDEOLA=EDIT_VIDEOLA
_OPENCHURCH=EDIT_OPENCHURCH
_ACQUIA_SEVEN=EDIT_ACQUIA_SEVEN


###---### main config
#
_TEST_MODE=EDIT_TEST_MODE
_STATUS=INIT
_WEBG=EDIT_WEBG
_HM_DISTRO=EDIT_HM_DISTRO
_ALL_DISTRO=EDIT_ALL_DISTRO
_LAST_HMR=EDIT_LAST_HMR
_LAST_ALL=EDIT_LAST_ALL
_LASTNUM=EDIT_LASTNUM
_AEGIR_VERSION=EDIT_AEGIR_VERSION
_DRUSH_VERSION=EDIT_DRUSH_VERSION
_DRUSH_FAMILY=EDIT_DRUSH_FAMILY
_USER=EDIT_USER
_DOMAIN=EDIT_DOMAIN
_CLIENT_OPTION=EDIT_CLIENT_OPTION
_CLIENT_CORES=EDIT_CLIENT_CORES
_DISTRO=EDIT_DISTRO
_SRCDIR=/opt/tmp/files
_LOG=/opt/tmp/aegir-install.log
_HOT_SAUCE=EDIT_HOT_SAUCE
_USE_CURRENT=EDIT_USE_CURRENT
_ROOT="/data/disk/$_USER"
_AEGIR_ROOT="$_ROOT/aegir/distro/$_HM_DISTRO"
_PREV_AEGIR_ROOT="$_ROOT/aegir/distro/$_LAST_HMR"
_DEBUG_MODE=EDIT_DEBUG_MODE
_BOA_REPO_GIT_URL=EDIT_BOA_REPO_GIT_URL
_BOA_REPO_NAME=EDIT_BOA_REPO_NAME
_THIS_DB_HOST=EDIT_THIS_DB_HOST
_PLATFORMS_LIST="EDIT_PLATFORMS_LIST"
_AUTOPILOT=EDIT_AUTOPILOT
_HM_ONLY=EDIT_HM_ONLY
_O_CONTRIB_UP=EDIT_O_CONTRIB_UP


###---### Functions
#
# noticeable messages
msg () {
  echo "Octopus [`date`] ==> $*"
}
#
# Simple prompt
prompt_yes_no () {
if [ "$_AUTOPILOT" = "YES" ]; then
  return 0
else
  while true ; do
    printf "$* [Y/n] "
    read answer
    if [ -z "$answer" ] ; then
      return 0
    fi
    case $answer in
      [Yy]|[Yy][Ee][Ss])
        return 0
        ;;
      [Nn]|[Nn][Oo])
        return 1
        ;;
      *)
        echo "Please answer yes or no"
        ;;
    esac
 done
fi
}
#
# Success msg
success () {
	msg "$1 Succeeded."
}
#
# Error msg
fatal () {
	echo " "
	msg "Fatal Error Occurred: $1"
	msg "Cannot continue installation."
	exit 1
}
#
# Perform an action, log it, and run the spinner throughout
runner () {
	CMD="$1"
	touch busy
	bash $_SRCDIR/spinner busy &
	if $CMD >> $_LOG; then
		rm busy
		sleep 1
		success "$CMD:"
		return 0
	else
		rm busy
		sleep 1
		echo "$CMD failed.  Error (if any): $?"
		echo " "
		echo "Displaying the last 15 lines of $_LOG to help troubleshoot this problem:"
		tail -15 $_LOG
		return 1
	fi
}
#
# Small spinner
mrun () {
	CMD="$1"
	touch busy
	bash $_SRCDIR/spinner busy &
	if $CMD >> $_LOG; then
		rm busy
		sleep 1
		return 0
	fi
}
#
# stop on error
# set -e ### disabled for debugging
#
# create standard directories
create_dirs () {
  #cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/conf/robots.txt ./
  mkdir -p ./sites/default/files
  mkdir -p ./cache/{normal,perm,mobile-tablet,mobile-smart,mobile-other}
  chmod 2777 -R ./cache &> /dev/null
  #mkdir -p ./backup/modules
  #chmod 2777 -R ./backup &> /dev/null
  if [ -e "./sites/default/default.settings.php" ] ; then
    cp -af ./sites/default/default.settings.php ./sites/default/settings.php &> /dev/null
  fi
  chmod a+rw ./sites/default/settings.php &> /dev/null
  chmod a+rwx ./sites/default/files &> /dev/null
  mkdir -p ./sites/all/modules
  mkdir -p ./sites/all/libraries
  mkdir -p ./sites/all/themes
  rm -f ./modules/*.txt
  rm -f ./themes/*.txt
  rm -f ./sites/all/*.txt
  echo empty > ./sites/all/EMPTY.txt
  echo empty > ./sites/all/modules/EMPTY.txt
  echo empty > ./sites/all/libraries/EMPTY.txt
  echo empty > ./sites/all/themes/EMPTY.txt
  chmod 0751 ./sites &> /dev/null
  chmod 0751 ./sites/all &> /dev/null
  chmod 02775 ./sites/all/modules &> /dev/null
  chmod 02775 ./sites/all/libraries &> /dev/null
  chmod 02775 ./sites/all/themes &> /dev/null
  rm -f .htaccess
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/conf/get.htaccess.txt ./
  mv -f get.htaccess.txt .htaccess &> /dev/null
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/conf/crossdomain.xml ./
}
#
# create standard symlinks
create_symlinks () {
if [ ! -L "includes" ] ; then
  ln -s $_CORE_DISTRO/boost_stats.php boost_stats.php &> /dev/null
  ln -s $_CORE_DISTRO/cron.php cron.php &> /dev/null
  ln -s $_CORE_DISTRO/crossdomain.xml crossdomain.xml &> /dev/null
  ln -s $_CORE_DISTRO/.htaccess .htaccess &> /dev/null
  ln -s $_CORE_DISTRO/includes includes &> /dev/null
  ln -s $_CORE_DISTRO/index.php index.php &> /dev/null
  ln -s $_CORE_DISTRO/install.php install.php &> /dev/null
  ln -s $_CORE_DISTRO/misc misc &> /dev/null
  ln -s $_CORE_DISTRO/modules modules &> /dev/null
  ln -s $_CORE_DISTRO/profiles profiles &> /dev/null
  ln -s $_CORE_DISTRO/themes themes &> /dev/null
  ln -s $_CORE_DISTRO/update.php update.php &> /dev/null
  ln -s $_CORE_DISTRO/xmlrpc.php xmlrpc.php &> /dev/null
  cp -af $_CORE_DISTRO/cache ./
  cp -af $_CORE_DISTRO/sites ./
fi
}
#
# create d7 symlinks
create_d7_symlinks () {
if [ ! -L "web.config" ] ; then
  ln -s $_CORE_DISTRO/authorize.php authorize.php &> /dev/null
  ln -s $_CORE_DISTRO/web.config web.config &> /dev/null
fi
}
#
# themes_for_d6
themes_for_d6 () {
cd /data/src/$_THIS_CORE/pressflow-6/themes
wget -q -U iCab http://ftp.drupal.org/files/projects/rubik-6.x-3.0-beta2.tar.gz
wget -q -U iCab http://ftp.drupal.org/files/projects/tao-6.x-3.2.tar.gz
  for archive in ./*.tar.gz; do
    tar -xzf "$archive" &> /dev/null
  done
  rm -f *.tar.gz
cd /data/src/$_THIS_CORE
}
#
# themes_for_d7
themes_for_d7 () {
cd $_CORE_DISTRO/themes
wget -q -U iCab http://ftp.drupal.org/files/projects/rubik-7.x-4.0-beta6.tar.gz
wget -q -U iCab http://ftp.drupal.org/files/projects/tao-7.x-3.0-beta3.tar.gz
  for archive in ./*.tar.gz; do
    tar -xzf "$archive" &> /dev/null
  done
  rm -f *.tar.gz
cd $_CORE_DISTRO
}
#
# download_textile
download_textile () {
  cd textile
  svn export http://textpattern.googlecode.com/svn/releases/4.4.0/source/textpattern/lib/classTextile.php &> /dev/null
  cp classTextile.php include/ &> /dev/null
}
#
# download_o_contrib_seven
download_o_contrib_seven () {
  wget -q -U iCab http://ftp.drupal.org/files/projects/admin-7.x-2.0-beta3.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/agrcache-7.x-1.0.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/backup_migrate-7.x-2.2.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/blockcache_alter-7.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/boost-7.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/config_perms-7.x-2.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/core_library-7.x-2.0-alpha7.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/css_emimage-7.x-1.2.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/filefield_nginx_progress-7.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/flood_control-7.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/fpa-7.x-2.0.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/httprl-7.x-1.2.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/readonlymode-7.x-1.0-beta1.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/robotstxt-7.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/seckit-7.x-1.3.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/site_verify-7.x-1.0.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/textile-7.x-2.0-rc9.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/variable_clean-7.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/vars-7.x-2.0-alpha10.tar.gz
  if [ "$_TEST_MODE" = "ON" ] ; then
    wget -q -U iCab http://ftp.drupal.org/files/projects/expire-7.x-1.x-dev.tar.gz
    wget -q -U iCab http://ftp.drupal.org/files/projects/purge-7.x-1.x-dev.tar.gz
    wget -q -U iCab http://ftp.drupal.org/files/projects/nginx_accel_redirect-7.x-1.0.tar.gz
  else
    rm -f -r nginx_accel_redirect*
  fi
  for archive in ./*.tar.gz; do
    tar -xzf "$archive" &> /dev/null
  done
  rm -f *.tar.gz
  download_textile
}
#
# download_o_contrib_six
download_o_contrib_six () {
  wget -q -U iCab http://files.aegir.cc/dev/cache.tar.gz
  wget -q -U iCab http://files.aegir.cc/dev/css_emimage-6.x-2.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/admin-6.x-2.0.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/backup_migrate-6.x-2.4.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/blockcache_alter-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/boost-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/config_perms-6.x-2.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/dbtuner-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/filefield_nginx_progress-6.x-1.4.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/fpa-6.x-2.3.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/httprl-6.x-1.2.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/image-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/imageinfo_cache-6.x-2.0.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/login_security-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/private_upload-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/readonlymode-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/robotstxt-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/seckit-6.x-1.3.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/securesite-6.x-2.4.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/site_verify-6.x-1.0.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/textile-6.x-2.4.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/variable_clean-6.x-1.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/views_content_cache-6.x-2.x-dev.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/views404-6.x-1.x-dev.tar.gz
  if [ "$_TEST_MODE" = "ON" ] ; then
    wget -q -U iCab http://ftp.drupal.org/files/projects/expire-6.x-1.0.tar.gz
    wget -q -U iCab http://ftp.drupal.org/files/projects/purge-6.x-1.3.tar.gz
    wget -q -U iCab http://ftp.drupal.org/files/projects/nginx_accel_redirect-6.x-1.5.tar.gz
  else
    rm -f -r expire*
    rm -f -r purge*
    rm -f -r nginx_accel_redirect*
  fi
  for archive in ./*.tar.gz; do
    tar -xzf "$archive" &> /dev/null
  done
  rm -f *.tar.gz
  download_textile
}
#
# upgrade_o_contrib
upgrade_o_contrib () {
if [ -d "$_CORE/o_contrib" ] ; then
  if [ ! -e "$_CORE/o_contrib/textile/include/classTextile.php" ] ; then
    _O_CONTRIB_UP=YES
  fi
fi
if [ -d "$_CORE/o_contrib_seven" ] ; then
  if [ ! -e "$_CORE/o_contrib_seven/textile/include/classTextile.php" ] ; then
    _O_CONTRIB_UP=YES
  fi
fi
if [ -d "/data/all/$_LAST_ALL/o_contrib" ] ; then
  if [ ! -e "/data/all/$_LAST_ALL/o_contrib/textile/include/classTextile.php" ] ; then
    _O_CONTRIB_UP=YES
  fi
fi
if [ -d "/data/all/$_LAST_ALL/o_contrib_seven" ] ; then
  if [ ! -e "/data/all/$_LAST_ALL/o_contrib_seven/textile/include/classTextile.php" ] ; then
    _O_CONTRIB_UP=YES
  fi
fi
if [ "$_TEST_MODE" = "ON" ] ; then
  _TEST_MODULE=purge
else
  _TEST_MODULE=textile
fi
if [ -d "/data/all/$_LAST_ALL/o_contrib" ] ; then
 if [ ! -d "/data/all/$_LAST_ALL/o_contrib/$_TEST_MODULE" ] || [ "$_O_CONTRIB_UP" = "YES" ] ; then
  cd /data/all/$_LAST_ALL/o_contrib
  rm -f -r *
  download_o_contrib_six
  cd /data/all/$_LAST_ALL/o_contrib
 fi
fi
if [ -d "$_CORE/o_contrib" ] ; then
 if [ ! -d "$_CORE/o_contrib/$_TEST_MODULE" ] || [ "$_O_CONTRIB_UP" = "YES" ] ; then
  cd $_CORE/o_contrib
  rm -f -r *
  download_o_contrib_six
  cd $_CORE/o_contrib
 fi
fi
if [ -d "/data/all/$_LAST_ALL/o_contrib_seven" ] ; then
 if [ ! -d "/data/all/$_LAST_ALL/o_contrib_seven/robotstxt" ] || [ "$_O_CONTRIB_UP" = "YES" ] ; then
  cd /data/all/$_LAST_ALL/o_contrib_seven
  rm -f -r *
  download_o_contrib_seven
  cd /data/all/$_LAST_ALL/o_contrib_seven
 fi
fi
if [ -d "$_CORE/o_contrib_seven" ] ; then
 if [ ! -d "$_CORE/o_contrib_seven/robotstxt" ] || [ "$_O_CONTRIB_UP" = "YES" ] ; then
  cd $_CORE/o_contrib_seven
  rm -f -r *
  download_o_contrib_seven
  cd $_CORE/o_contrib_seven
 fi
fi
}
#
# prepare_pressflow_core
prepare_pressflow_core () {
  mkdir -p /data/src/$_THIS_CORE
  chmod 0700 /data/src/$_THIS_CORE &> /dev/null
  cd /data/src/$_THIS_CORE
  rm -f -r /data/src/$_THIS_CORE/pressflow-6
  bzr branch lp:pressflow/6.x pressflow-6 &> /dev/null
  cd /data/src/$_THIS_CORE/pressflow-6/
  rm -f /data/src/$_THIS_CORE/pressflow-6/*.txt
  rm -f /data/src/$_THIS_CORE/pressflow-6/modules/*.txt
  rm -f -r /data/src/$_THIS_CORE/pressflow-6/modules/cookie_cache_bypass
  rm -f /data/src/$_THIS_CORE/pressflow-6/themes/*.txt
  themes_for_d6
  rm -f /data/src/$_THIS_CORE/pressflow-6/sites/all/*.txt
  if [ ! -e "$_CORE/o_contrib_seven" ] ; then
    mkdir -p $_CORE/o_contrib_seven
    cd $_CORE/o_contrib_seven
    download_o_contrib_seven
    cd $_CORE/o_contrib_seven
  fi
  if [ ! -e "$_CORE/o_contrib" ] ; then
    mkdir -p $_CORE/o_contrib
    cd $_CORE/o_contrib
    download_o_contrib_six
    cd $_CORE/o_contrib
  fi
  cd /data/src/$_THIS_CORE/pressflow-6/
  cp -af $_CORE/o_contrib/boost/stats/boost_stats.php ./ &> /dev/null
  ln -s $_CORE/o_contrib modules/o_contrib
  cp -a $_CORE/o_contrib/image/image.imagemagick.inc includes/
}


###---### User check
#
msg "$_STATUS C: Aegir automated install script part C"
if [ `whoami` = "root" ] ; then
  msg "$_STATUS C: This script should be ran as a non-root user - exit now"
  exit 1
fi


###---### Hot Sauce check..
#
msg "$_STATUS C: Hot Sauce check.."
mrun "sleep 2"
if [ "$_HOT_SAUCE" = "NO" ] ; then
  _CORE="/data/all/$_LAST_ALL"
  _THIS_CORE="$_LAST_ALL"
  if [ "$_USE_CURRENT" = "YES" ] && [ -e "/data/all/000/translations/drupal-$_SMALLCORE6.pl.po" ]; then
    msg "$_STATUS C: Shared platforms code v.$_LAST_ALL (latest available) will be used for this install"
  elif [ "$_USE_CURRENT" = "NO" ] || [ ! -e "/data/all/000/translations/drupal-$_SMALLCORE6.pl.po" ] ; then
    _CORE="/data/all/$_ALL_DISTRO"
    _THIS_CORE="$_ALL_DISTRO"
    msg "$_STATUS C: Shared platforms code v.$_ALL_DISTRO (hot new) will be created - forced Hot Sauce"
  else
    msg "$_STATUS C: Shared platforms code v.$_LAST_ALL (latest available) will be used for this install"
  fi
else
  _CORE="/data/all/$_ALL_DISTRO"
  _THIS_CORE="$_ALL_DISTRO"
  msg "$_STATUS C: Shared platforms code v.$_ALL_DISTRO (hot new) will be created"
fi
if [ -d "$_CORE/o_contrib" ] ; then
  _STATUS=CLONE
else
  _STATUS=INIT
fi


###---### Distributions full names
#
_F_ACQUIA="Acquia $_SMALLCORE6 P.$_THIS_CORE"
_F_ACQUIA_SEVEN="Acquia $_ACQUIA_SEVEN P.$_THIS_CORE"
_F_ATRIUM="Atrium 1.0 P.$_THIS_CORE"
_F_DRUPAL5="Drupal $_DRUPAL5 P.$_THIS_CORE"
_F_DRUPAL6="Drupal $_SMALLCORE6 P.$_THIS_CORE"
_F_DRUPAL7="Drupal $_SMALLCORE7 P.$_THIS_CORE"
_F_COMMERCE="Commerce Kickstart 1.0-rc4 P.$_THIS_CORE"
_F_COMMONS="Acquia Commons $_COMMONS P.$_THIS_CORE"
_F_FSERVER="Feature Server $_SMALLCORE6 P.$_THIS_CORE"
_F_MANAGINGNEWS="MNews $_MANAGINGNEWS P.$_THIS_CORE"
_F_NODESTREAM="NodeStream $_NODESTREAM P.$_THIS_CORE"
_F_OPENPUBLISH="OpenPublish $_OPENPUBLISH P.$_THIS_CORE"
_F_OPENSCHOLAR="OpenScholar $_OPENSCHOLAR P.$_THIS_CORE"
_F_PROSEPOINT="Prosepoint $_PROSEPOINT P.$_THIS_CORE"
_F_UBERCART="Ubercart 2.7 $_SMALLCORE6 P.$_THIS_CORE"
_F_OPENPUBLIC="OpenPublic beta3 $_SMALLCORE7 P.$_THIS_CORE"
_F_COD="Conference $_COD P.$_THIS_CORE"
_F_OPENENTERPRISE="Open Enterprise $_OPENENTERPRISE P.$_THIS_CORE"
_F_CIVICRM6="CiviCRM $_CIVICRM6 P.$_THIS_CORE"
_F_CIVICRM7="CiviCRM $_CIVICRM7 $_SMALLCORE7 P.$_THIS_CORE"
_F_VIDEOLA="Videola $_VIDEOLA P.$_THIS_CORE"
_F_OPENCHURCH="OpenChurch $_OPENCHURCH P.$_THIS_CORE"
#
_F_DRUPAL6_D="Drupal $_SMALLCORE6 D.$_THIS_CORE"
_F_DRUPAL6_S="Drupal $_SMALLCORE6 S.$_THIS_CORE"
_F_DRUPAL6_P="Drupal $_SMALLCORE6 P.$_THIS_CORE"
_F_DRUPAL7_D="Drupal $_SMALLCORE7 D.$_THIS_CORE"
_F_DRUPAL7_S="Drupal $_SMALLCORE7 S.$_THIS_CORE"
_F_DRUPAL7_P="Drupal $_SMALLCORE7 P.$_THIS_CORE"


###---### Create directories
#
msg "$_STATUS C: Create directories"
mrun "sleep 2"
mkdir -p $_ROOT/distro/$_THIS_CORE
chmod 0711 $_ROOT/distro &> /dev/null
chmod 0711 $_ROOT/distro/$_THIS_CORE &> /dev/null


###---### Prepare Pressflow core
#
if [ $_STATUS = "INIT" ] || [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
  msg "$_STATUS C: Preparing Pressflow core, please wait.."
  mrun "sleep 2"
  prepare_pressflow_core
fi
if [ -d "$_CORE/o_contrib/memcache" ] ; then
  rm -f -r $_CORE/o_contrib/memcache &> /dev/null
fi
if [ -d "$_CORE/o_contrib/varnish" ] ; then
  rm -f -r $_CORE/o_contrib/varnish &> /dev/null
fi
if [ -d "$_CORE/o_contrib/bakery" ] ; then
  rm -f -r $_CORE/o_contrib/bakery &> /dev/null
fi
if [ -d "$_CORE/o_contrib/session443" ] ; then
  rm -f -r $_CORE/o_contrib/session443 &> /dev/null
fi
if [ -d "$_CORE/o_contrib/cookie_cache_bypass_adv" ] ; then
  rm -f -r $_CORE/o_contrib/cookie_cache_bypass_adv &> /dev/null
fi
if [ -d "$_CORE/o_contrib/module_supports" ] ; then
  rm -f -r $_CORE/o_contrib/module_supports &> /dev/null
fi
if [ ! -e "/data/all/000/translations/drupal-$_SMALLCORE6.pl.po" ] ; then
  if [ ! -d "/data/all/000/translations" ] ; then
    mkdir -p /data/all/000/translations
  else
    rm -f /data/all/000/translations/* &> /dev/null
  fi
  cd /data/all/000/translations
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.zh-hant.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.zh-hans.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.ca.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.da.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.nl.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.fr.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.de.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.hu.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.ja.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.nb.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.pl.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.pt-pt.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.pt-br.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.es.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.sv.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.el.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.et.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.it.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.uk.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.sk.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.fi.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.tr.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.cs.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.lt.po
  wget -q -U iCab http://ftp.drupal.org/files/translations/6.x/drupal/drupal-$_SMALLCORE6.ru.po
fi
if [ $_STATUS != "INIT" ] ; then
  upgrade_o_contrib
fi


if [ "$_CLIENT_CORES" -ge "2" ] && [ "$_CLIENT_OPTION" = "SSD" ] && [[ "$_DOMAIN" =~ ".host8." ]] ; then
  _ALLOW_FOUR=YES
elif [ "$_CLIENT_CORES" -ge "4" ] && [ "$_CLIENT_OPTION" != "SSD" ] ; then
  if [[ "$_DOMAIN" =~ ".host8." ]] ; then
    _ALLOW_FOUR=YES
  else
    _ALLOW_FOUR=YES
  fi
else
  _ALLOW_FOUR=NO
fi


###---### Acquia
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ AQ6 ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/acquia-$_SMALLCORE6/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_ACQUIA - http://bit.ly/acquiadrupal" ; then
true
msg "STATUS: $_F_ACQUIA install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/acquia-$_SMALLCORE6"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  git clone git://git.acquia.com/drupal/branches/1.x-6.x.git $_CORE/acquia-$_SMALLCORE6 &> /dev/null
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/acquia-$_SMALLCORE6/ &> /dev/null
  cd $_CORE/acquia-$_SMALLCORE6
  rm -f $_CORE/acquia-$_SMALLCORE6/*.txt
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/acquia/acquia.profile
  sed -i "s/'name' => 'Acquia Drupal',/'name' => 'Acquia Drupal',\n    'old_short_name' => 'default',/g" ./profiles/acquia/acquia.profile
  rm -f -r ./profiles/default
  create_dirs
  ln -s /data/all/000/translations $_CORE/acquia-$_SMALLCORE6/profiles/acquia/translations &> /dev/null
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/acquia-$_SMALLCORE6
cd $_ROOT/distro/$_THIS_CORE/acquia-$_SMALLCORE6
create_symlinks
msg "STATUS: $_F_ACQUIA installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_ACQUIA installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### Acquia Seven
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ AQ7 ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/acquia-$_ACQUIA_SEVEN" ] ; then
if [ "$_CLIENT_CORES" -ge "1" ] ; then
echo " "
if prompt_yes_no "$_F_ACQUIA_SEVEN - http://bit.ly/acquiadrupal" ; then
true
msg "STATUS: $_F_ACQUIA_SEVEN install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/acquia-$_ACQUIA_SEVEN"
if [ ! -d "$_CORE_DISTRO" ] ; then
  cd $_CORE
  git clone git://git.acquia.com/drupal/branches/7.x.git $_CORE/acquia-$_ACQUIA_SEVEN &> /dev/null
  cd $_CORE/acquia-$_ACQUIA_SEVEN
  rm -f $_CORE/acquia-$_ACQUIA_SEVEN/*.txt
  ln -s $_CORE/o_contrib_seven modules/o_contrib_seven
  rm -f -r $_CORE/acquia-$_ACQUIA_SEVEN/profiles/minimal
  rm -f -r $_CORE/acquia-$_ACQUIA_SEVEN/profiles/testing
  create_dirs
  themes_for_d7
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/acquia-$_ACQUIA_SEVEN
cd $_ROOT/distro/$_THIS_CORE/acquia-$_ACQUIA_SEVEN
create_symlinks
create_d7_symlinks
rm -f boost_stats.php
msg "STATUS: $_F_ACQUIA_SEVEN installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_ACQUIA_SEVEN installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### Open Atrium
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ OAM ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/atrium-$_OPENATRIUM/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_ATRIUM - http://openatrium.com" ; then
true
msg "STATUS: $_F_ATRIUM install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/atrium-$_OPENATRIUM"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/makefiles/atrium.make ./
  $_ROOT/tools/drush/drush make atrium.make atrium-$_OPENATRIUM &> /dev/null
  rm -f atrium.make
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/atrium-$_OPENATRIUM/ &> /dev/null
  cd $_CORE/atrium-$_OPENATRIUM
  rm -f -r $_CORE/atrium-$_OPENATRIUM/modules/cookie_cache_bypass
  rm -f $_CORE/atrium-$_OPENATRIUM/*.txt
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/openatrium/openatrium.profile
  rm -f -r ./profiles/default
  cd ./profiles/openatrium/modules/atrium_features/
  git clone git://github.com/nuvoleweb/atrium_folders.git &> /dev/null
  cd $_CORE/atrium-$_OPENATRIUM
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/atrium-$_OPENATRIUM
cd $_ROOT/distro/$_THIS_CORE/atrium-$_OPENATRIUM
create_symlinks
msg "STATUS: $_F_ATRIUM installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_ATRIUM installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### Drupal 5 Pressflow
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ D5P ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/pressflow-$_DRUPAL5" ] ; then
echo " "
if prompt_yes_no "$_F_DRUPAL5 - http://pressflow.org" ; then
true
msg "STATUS: $_F_DRUPAL5 install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/pressflow-$_DRUPAL5"
if [ ! -d "$_CORE_DISTRO" ] ; then
  cd $_CORE
  wget -q -U iCab http://launchpad.net/pressflow/5.x/$_DRUPAL5/+download/pressflow-$_DRUPAL5.tar.gz
  tar -xzf pressflow-$_DRUPAL5.tar.gz
  rm -f pressflow-$_DRUPAL5.tar.gz
  cd $_CORE/pressflow-$_DRUPAL5
  rm -f $_CORE/pressflow-$_DRUPAL5/*.txt
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/pressflow-$_DRUPAL5
cd $_ROOT/distro/$_THIS_CORE/pressflow-$_DRUPAL5
create_symlinks
rm -f boost_stats.php
msg "STATUS: $_F_DRUPAL5 installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_DRUPAL5 installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### Drupal 6 Pressflow
#
if [ ! -d "$_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-prod/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_DRUPAL6 - http://pressflow.org" ; then
true

###---### Drupal 6 Pressflow Development
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ D6D ]] ; then
msg "STATUS: $_F_DRUPAL6_D install in progress, please wait..."
mrun "sleep 1"
_CORE_DISTRO="$_CORE/pressflow-$_SMALLCORE6-dev"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  mkdir -p $_CORE/pressflow-$_SMALLCORE6-dev
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/pressflow-$_SMALLCORE6-dev/ &> /dev/null
  cd $_CORE/pressflow-$_SMALLCORE6-dev
  rm -f $_CORE/pressflow-$_SMALLCORE6-dev/*.txt
  sed -i "s/'dblog'/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'admin', 'path_alias_cache'/g" ./profiles/default/default.profile
  sed -i "s/'name' => 'Pressflow',/'name' => 'Pressflow',\n    'old_short_name' => 'drupalcenter',/g" ./profiles/default/default.profile
  create_dirs
  ln -s /data/all/000/translations $_CORE/pressflow-$_SMALLCORE6-dev/profiles/default/translations &> /dev/null
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-dev
cd $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-dev
create_symlinks
msg "STATUS: $_F_DRUPAL6_D installation completed"
mrun "sleep 1"
echo " "
fi

###---### Drupal 6 Pressflow Staging
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ D6S ]] ; then
msg "STATUS: $_F_DRUPAL6_S install in progress, please wait..."
mrun "sleep 1"
_CORE_DISTRO="$_CORE/pressflow-$_SMALLCORE6-stage"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  mkdir -p $_CORE/pressflow-$_SMALLCORE6-stage
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/pressflow-$_SMALLCORE6-stage/ &> /dev/null
  cd $_CORE/pressflow-$_SMALLCORE6-stage
  rm -f $_CORE/pressflow-$_SMALLCORE6-stage/*.txt
  sed -i "s/'dblog'/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'admin', 'path_alias_cache'/g" ./profiles/default/default.profile
  sed -i "s/'name' => 'Pressflow',/'name' => 'Pressflow',\n    'old_short_name' => 'acquia',/g" ./profiles/default/default.profile
  create_dirs
  ln -s /data/all/000/translations $_CORE/pressflow-$_SMALLCORE6-stage/profiles/default/translations &> /dev/null
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-stage
cd $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-stage
create_symlinks
msg "STATUS: $_F_DRUPAL6_S installation completed"
mrun "sleep 1"
echo " "
fi

###---### Drupal 6 Pressflow Production
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ D6P ]] ; then
if [ ! -d "$_CORE/pressflow" ] ; then
  msg "STATUS: $_F_DRUPAL6 install in progress, please wait..."
  mrun "sleep 1"
  _CORE_DISTRO="$_CORE/pressflow-$_SMALLCORE6-prod"
  if [ ! -d "$_CORE_DISTRO" ] ; then
    if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
      prepare_pressflow_core
    fi
    cd $_CORE
    mkdir -p $_CORE/pressflow-$_SMALLCORE6-prod
    cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/pressflow-$_SMALLCORE6-prod/ &> /dev/null
    cd $_CORE/pressflow-$_SMALLCORE6-prod
    rm -f $_CORE/pressflow-$_SMALLCORE6-prod/*.txt
    sed -i "s/'dblog'/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'admin', 'path_alias_cache'/g" ./profiles/default/default.profile
    sed -i "s/'name' => 'Pressflow',/'name' => 'Pressflow',\n    'old_short_name' => 'acquia',/g" ./profiles/default/default.profile
    create_dirs
    ln -s /data/all/000/translations $_CORE/pressflow-$_SMALLCORE6-prod/profiles/default/translations &> /dev/null
  fi
  mkdir -p $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-prod
  cd $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-prod
  create_symlinks
  msg "STATUS: $_F_DRUPAL6 installation completed"
  mrun "sleep 2"
elif [ -d "$_CORE/pressflow" ] ; then
  echo " "
  msg "STATUS: $_F_DRUPAL6 install in progress, please wait..."
  mrun "sleep 1"
  _CORE_DISTRO="$_CORE/pressflow"
  mkdir -p $_ROOT/distro/$_THIS_CORE/pressflow
  cd $_ROOT/distro/$_THIS_CORE/pressflow
  create_symlinks
  msg "STATUS: $_F_DRUPAL6 installation completed"
  mrun "sleep 2"
fi
fi

else
  msg "STATUS: $_F_DRUPAL6 installation skipped"
  mrun "sleep 1"
fi
fi


###---### Drupal 7
#
if [ ! -d "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7P" ] ; then
echo " "
if prompt_yes_no "$_F_DRUPAL7 - http://drupal.org/drupal-7.0" ; then
true

###---### Drupal 7 Development
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ D7D ]] ; then
msg "STATUS: $_F_DRUPAL7_D install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/$_DRUPAL7D"
if [ ! -d "$_CORE_DISTRO" ] ; then
  cd $_CORE
  if [ -d "$_CORE/$_DRUPAL7" ] ; then
    mv $_CORE/$_DRUPAL7 $_CORE/drupal-seven-old
  fi
  wget -q -U iCab http://ftp.drupal.org/files/projects/$_DRUPAL7.tar.gz
  tar -xzf $_DRUPAL7.tar.gz
  mv $_DRUPAL7 $_DRUPAL7D
  cd $_CORE/$_DRUPAL7D
  rm -f $_CORE/$_DRUPAL7D/*.txt
  ln -s $_CORE/o_contrib_seven modules/o_contrib_seven
  rm -f -r $_CORE/$_DRUPAL7D/profiles/testing
  for Files in `find $_CORE/$_DRUPAL7D/profiles -type f`
  do
    sed -i "s/Minimal/Drupal 7 Minimal/g"   $Files
    sed -i "s/Standard/Drupal 7 Standard/g" $Files
  done
  sed -i "s/7 Minimal/7 Minimal\nold_short_name = testing/g" ./profiles/minimal/minimal.info
  sed -i "s/7 Standard/7 Standard\nold_short_name = minimal/g" ./profiles/standard/standard.info
  create_dirs
  themes_for_d7
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/$_DRUPAL7D
cd $_ROOT/distro/$_THIS_CORE/$_DRUPAL7D
create_symlinks
create_d7_symlinks
rm -f boost_stats.php
msg "STATUS: $_F_DRUPAL7_D installation completed"
mrun "sleep 1"
echo " "
fi

###---### Drupal 7 Staging
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ D7S ]] ; then
msg "STATUS: $_F_DRUPAL7_S install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/$_DRUPAL7S"
if [ ! -d "$_CORE_DISTRO" ] ; then
  cd $_CORE
  if [ ! -e "$_CORE/$_DRUPAL7.tar.gz" ] ; then
    wget -q -U iCab http://ftp.drupal.org/files/projects/$_DRUPAL7.tar.gz
  fi
  tar -xzf $_DRUPAL7.tar.gz
  mv $_DRUPAL7 $_DRUPAL7S
  cd $_CORE/$_DRUPAL7S
  rm -f $_CORE/$_DRUPAL7S/*.txt
  ln -s $_CORE/o_contrib_seven modules/o_contrib_seven
  rm -f -r $_CORE/$_DRUPAL7S/profiles/testing
  for Files in `find $_CORE/$_DRUPAL7S/profiles -type f`
  do
    sed -i "s/Minimal/Drupal 7 Minimal/g"   $Files
    sed -i "s/Standard/Drupal 7 Standard/g" $Files
  done
  sed -i "s/7 Minimal/7 Minimal\nold_short_name = testing/g" ./profiles/minimal/minimal.info
  sed -i "s/7 Standard/7 Standard\nold_short_name = minimal/g" ./profiles/standard/standard.info
  create_dirs
  themes_for_d7
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/$_DRUPAL7S
cd $_ROOT/distro/$_THIS_CORE/$_DRUPAL7S
create_symlinks
create_d7_symlinks
rm -f boost_stats.php
msg "STATUS: $_F_DRUPAL7_S installation completed"
mrun "sleep 1"
echo " "
fi

if [ -d "$_CORE/drupal-seven-old" ] ; then
  mv $_CORE/drupal-seven-old $_CORE/$_DRUPAL7
fi

###---### Drupal 7 Production
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ D7P ]] ; then
if [ ! -d "$_CORE/$_DRUPAL7" ] ; then
  msg "STATUS: $_F_DRUPAL7_P install in progress, please wait..."
  mrun "sleep 2"
  _CORE_DISTRO="$_CORE/$_DRUPAL7P"
  if [ ! -d "$_CORE_DISTRO" ] ; then
    cd $_CORE
    if [ ! -e "$_CORE/$_DRUPAL7.tar.gz" ] ; then
      wget -q -U iCab http://ftp.drupal.org/files/projects/$_DRUPAL7.tar.gz
    fi
    tar -xzf $_DRUPAL7.tar.gz
    rm -f $_DRUPAL7.tar.gz
    mv $_DRUPAL7 $_DRUPAL7P
    cd $_CORE/$_DRUPAL7P
    rm -f $_CORE/$_DRUPAL7P/*.txt
    ln -s $_CORE/o_contrib_seven modules/o_contrib_seven
    rm -f -r $_CORE/$_DRUPAL7P/profiles/testing
    for Files in `find $_CORE/$_DRUPAL7P/profiles -type f`
    do
      sed -i "s/Minimal/Drupal 7 Minimal/g"   $Files
      sed -i "s/Standard/Drupal 7 Standard/g" $Files
    done
    sed -i "s/7 Minimal/7 Minimal\nold_short_name = testing/g" ./profiles/minimal/minimal.info
    sed -i "s/7 Standard/7 Standard\nold_short_name = minimal/g" ./profiles/standard/standard.info
    create_dirs
    themes_for_d7
  fi
  mkdir -p $_ROOT/distro/$_THIS_CORE/$_DRUPAL7P
  cd $_ROOT/distro/$_THIS_CORE/$_DRUPAL7P
  create_symlinks
  create_d7_symlinks
  rm -f boost_stats.php
  msg "STATUS: $_F_DRUPAL7_P installation completed"
  mrun "sleep 1"
elif [ -d "$_CORE/$_DRUPAL7" ] ; then
  echo " "
  msg "STATUS: $_F_DRUPAL7_P install in progress, please wait..."
  mrun "sleep 2"
  _CORE_DISTRO="$_CORE/$_DRUPAL7"
  mkdir -p $_ROOT/distro/$_THIS_CORE/$_DRUPAL7
  cd $_ROOT/distro/$_THIS_CORE/$_DRUPAL7
  create_symlinks
  create_d7_symlinks
  rm -f boost_stats.php
  msg "STATUS: $_F_DRUPAL7_P installation completed"
  mrun "sleep 1"
fi
fi

else
  msg "STATUS: $_F_DRUPAL7 installation skipped"
  mrun "sleep 1"
fi
fi


###---### Open Public
#
build_openpublic () {
  wget -q -U iCab http://www.openpublicapp.com/sites/default/files/releases/openpublic.$_OPENPUBLIC.tar.gz
  tar -xzf openpublic.$_OPENPUBLIC.tar.gz
  rm -f openpublic.$_OPENPUBLIC.tar.gz
  mv openpublic openpublic-$_OPENPUBLIC
  wget -q -U iCab http://ftp.drupal.org/files/projects/$_DRUPAL7.tar.gz
  tar -xzf $_DRUPAL7.tar.gz
  rm -f $_DRUPAL7.tar.gz
  cp -af $_DRUPAL7/* $_CORE_DISTRO/ &> /dev/null
  rm -f -r $_DRUPAL7
  cd $_CORE/openpublic-$_OPENPUBLIC
  rm -f $_CORE/openpublic-$_OPENPUBLIC/*.txt
  ln -s $_CORE/o_contrib_seven modules/o_contrib_seven
  rm -f -r $_CORE/openpublic-$_OPENPUBLIC/profiles/testing
  rm -f -r $_CORE/openpublic-$_OPENPUBLIC/profiles/standard
  rm -f -r $_CORE/openpublic-$_OPENPUBLIC/profiles/minimal
  create_dirs
  cd $_CORE/openpublic-$_OPENPUBLIC/profiles/openpublic/themes
  wget -q -U iCab http://ftp.drupal.org/files/projects/openpublic_eu-7.x-1.0.tar.gz
  tar -xzf openpublic_eu-7.x-1.0.tar.gz &> /dev/null
  rm -f openpublic_eu-7.x-1.0.tar.gz
  if [ $_OPENPUBLIC = "beta1-build100" ] ; then
    cd $_CORE/openpublic-$_OPENPUBLIC/profiles/openpublic
    cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/openpublic.patch ./
    patch -p1 < openpublic.patch &> /dev/null
    cd $_CORE/openpublic-$_OPENPUBLIC
  fi
  touch $_CORE_DISTRO/core_$_SMALLCORE7.log
}

_CORE_DISTRO="$_CORE/openpublic-$_OPENPUBLIC"
if [ -d "$_CORE_DISTRO" ] && [ ! -e "$_CORE_DISTRO/core_$_SMALLCORE7.log" ] ; then
  rm -f -r $_CORE_DISTRO
  cd $_CORE
  build_openpublic
fi

if [ "$_ALLOW_FOUR" = "YES" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ OPC ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC" ] ; then
echo " "
if prompt_yes_no "$_F_OPENPUBLIC - http://openpublicapp.com" ; then
true
msg "STATUS: $_F_OPENPUBLIC install in progress, please wait..."
mrun "sleep 2"
if [ ! -d "$_CORE_DISTRO" ] ; then
  cd $_CORE
  build_openpublic
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC
cd $_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC
if [ ! -L "$_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC/sites/all/libraries/colorbox" ] ; then
  mkdir -p $_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC/sites/all/libraries
  ln -s $_CORE_DISTRO/profiles/openpublic/libraries/colorbox $_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC/sites/all/libraries/colorbox
fi
create_symlinks
create_d7_symlinks
rm -f boost_stats.php
msg "STATUS: $_F_OPENPUBLIC installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_OPENPUBLIC installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### Commerce 7.x
#
if [ "$_CLIENT_CORES" -ge "1" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ DCE ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/commerce-$_COMMERCE-$_SMALLCORE7" ] ; then
echo " "
if prompt_yes_no "$_F_COMMERCE - http://drupalcommerce.org" ; then
true
msg "STATUS: $_F_COMMERCE install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/commerce-$_COMMERCE-$_SMALLCORE7"
if [ ! -d "$_CORE_DISTRO" ] ; then
  cd $_CORE
  wget -q -U iCab http://ftp.drupal.org/files/projects/commerce_kickstart-$_COMMERCE-core.tar.gz
  tar -xzf commerce_kickstart-$_COMMERCE-core.tar.gz
  rm -f commerce_kickstart-$_COMMERCE-core.tar.gz
  if [ -d "$_CORE/drupal-7.4" ] ; then
    mv drupal-7.4 commerce-$_COMMERCE-$_SMALLCORE7
  elif [ -d "$_CORE/drupal-7.7" ] ; then
    mv drupal-7.7 commerce-$_COMMERCE-$_SMALLCORE7
  elif [ -d "$_CORE/drupal-7.8" ] ; then
    mv drupal-7.8 commerce-$_COMMERCE-$_SMALLCORE7
  elif [ -d "$_CORE/drupal-7.9" ] ; then
    mv drupal-7.9 commerce-$_COMMERCE-$_SMALLCORE7
  fi
  wget -q -U iCab http://ftp.drupal.org/files/projects/$_DRUPAL7.tar.gz
  tar -xzf $_DRUPAL7.tar.gz
  rm -f $_DRUPAL7.tar.gz
  cp -af $_DRUPAL7/* $_CORE_DISTRO/ &> /dev/null
  rm -f -r $_DRUPAL7
  cd $_CORE/commerce-$_COMMERCE-$_SMALLCORE7
  rm -f $_CORE/commerce-$_COMMERCE-$_SMALLCORE7/*.txt
  ln -s $_CORE/o_contrib_seven modules/o_contrib_seven
  rm -f -r $_CORE/commerce-$_COMMERCE-$_SMALLCORE7/profiles/minimal
  rm -f -r $_CORE/commerce-$_COMMERCE-$_SMALLCORE7/profiles/standard
  rm -f -r $_CORE/commerce-$_COMMERCE-$_SMALLCORE7/profiles/testing
  cd $_CORE/commerce-$_COMMERCE-$_SMALLCORE7/profiles/commerce_kickstart
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/commerce_kickstart.patch ./
  patch -p1 < commerce_kickstart.patch &> /dev/null
  cd $_CORE/commerce-$_COMMERCE-$_SMALLCORE7
  create_dirs
  themes_for_d7
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/commerce-$_COMMERCE-$_SMALLCORE7
cd $_ROOT/distro/$_THIS_CORE/commerce-$_COMMERCE-$_SMALLCORE7
create_symlinks
create_d7_symlinks
rm -f boost_stats.php
msg "STATUS: $_F_COMMERCE installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_COMMERCE installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### Acquia Commons
#
if [ "$_ALLOW_FOUR" = "YES" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ DCS ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_COMMONS - http://acquia.com/drupalcommons" ; then
true
msg "STATUS: $_F_COMMONS install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/acquia_commons-$_COMMONS"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  wget -q -U iCab http://network.acquia.com/files/marketing/commons/commons-$_COMMONS.tar.gz
  tar -xzf commons-$_COMMONS.tar.gz
  rm -f commons-$_COMMONS.tar.gz
  if [ -d "$_CORE/acquia_commons" ] ; then
    mv $_CORE/acquia_commons $_CORE/acquia_commons-$_COMMONS
  elif [ -d "$_CORE/commons-$_COMMONS" ] ; then
    mv $_CORE/commons-$_COMMONS $_CORE/acquia_commons-$_COMMONS
  else
    mv $_CORE/commons $_CORE/acquia_commons-$_COMMONS
  fi
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/acquia_commons-$_COMMONS/ &> /dev/null
  cd $_CORE/acquia_commons-$_COMMONS
  rm -f $_CORE/acquia_commons-$_COMMONS/*.txt
  rm -f -r $_CORE/acquia_commons-$_COMMONS/modules/cookie_cache_bypass
  if [ $_COMMONS = "6.x-1.3" ] ; then
    cd $_CORE/acquia_commons-$_COMMONS/profiles/drupal_commons
    cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/commons-1045778-fix-aegir-installs.patch ./
    cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/commons-1060250-aegir-infinite-loop.patch ./
    patch -p1 < commons-1045778-fix-aegir-installs.patch &> /dev/null
    mrun "sleep 2"
    patch -p1 < commons-1060250-aegir-infinite-loop.patch &> /dev/null
    cd $_CORE/acquia_commons-$_COMMONS
  fi
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/drupal_commons/drupal_commons.profile
  rm -f -r ./profiles/default
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS
cd $_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS
create_symlinks
if [ ! -L "$_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS/sites/all/libraries/getid3" ] ; then
  mkdir -p $_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS/sites/all/libraries
  ln -s $_CORE_DISTRO/profiles/drupal_commons/libraries/getid3 $_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS/sites/all/libraries/getid3
fi
msg "STATUS: $_F_COMMONS installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_COMMONS installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### Open Enterprise
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ OEE ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/openenterprise-$_OPENENTERPRISE/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_OPENENTERPRISE - http://leveltendesign.com/enterprise" ; then
true
msg "STATUS: $_F_OPENENTERPRISE install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/openenterprise-$_OPENENTERPRISE"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  wget -q -U iCab http://files.aegir.cc/dev/distro/openenterprise-$_OPENENTERPRISE.tar.gz
  tar -xzf openenterprise-$_OPENENTERPRISE.tar.gz
  rm -f openenterprise-$_OPENENTERPRISE.tar.gz
  if [ -d "$_CORE/openenterprise" ] ; then
    mv $_CORE/openenterprise $_CORE/openenterprise-$_OPENENTERPRISE
  else
    mv $_CORE/commons $_CORE/openenterprise-$_OPENENTERPRISE
  fi
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/openenterprise-$_OPENENTERPRISE/ &> /dev/null
  cd $_CORE/openenterprise-$_OPENENTERPRISE
  rm -f $_CORE/openenterprise-$_OPENENTERPRISE/*.txt
  rm -f -r $_CORE/openenterprise-$_OPENENTERPRISE/modules/cookie_cache_bypass
  if [ $_OPENENTERPRISE = "6.x-1.0-beta3" ] ; then
    cd $_CORE/openenterprise-$_OPENENTERPRISE/profiles/openenterprise
    cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/openenterprise.patch ./
    patch -p1 < openenterprise.patch &> /dev/null
    cd $_CORE/openenterprise-$_OPENENTERPRISE
  fi
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/openenterprise/openenterprise.profile
  rm -f -r ./profiles/default
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/openenterprise-$_OPENENTERPRISE
cd $_ROOT/distro/$_THIS_CORE/openenterprise-$_OPENENTERPRISE
create_symlinks
msg "STATUS: $_F_OPENENTERPRISE installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_OPENENTERPRISE installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### Videola Make
#
if [ "$_ALLOW_FOUR" = "YES" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ VOA ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/videola-$_VIDEOLA/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_VIDEOLA - http://videola.tv" ; then
true
msg "STATUS: $_F_VIDEOLA install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/videola-$_VIDEOLA"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/makefiles/videola.make ./
  $_ROOT/tools/drush/drush make videola.make videola-$_VIDEOLA &> /dev/null
  rm -f videola.make
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/videola-$_VIDEOLA/ &> /dev/null
  cd $_CORE/videola-$_VIDEOLA
  rm -f $_CORE/videola-$_VIDEOLA/*.txt
  rm -f -r $_CORE/videola-$_VIDEOLA/modules/cookie_cache_bypass
  if [ $_VIDEOLA = "6.x-1.0-alpha1" ] ; then
    cd $_CORE/videola-$_VIDEOLA/profiles/videola
    cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/videola.patch ./
    patch -p1 < videola.patch &> /dev/null
    cd $_CORE/videola-$_VIDEOLA
  fi
  rm -f -r ./profiles/default
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/videola-$_VIDEOLA
cd $_ROOT/distro/$_THIS_CORE/videola-$_VIDEOLA
create_symlinks
msg "STATUS: $_F_VIDEOLA installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_VIDEOLA installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### Feature Server Make
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ FSR ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/fserver-$_SMALLCORE6/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_FSERVER - http://bit.ly/fservermore" ; then
true
msg "STATUS: $_F_FSERVER install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/fserver-$_SMALLCORE6"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [[ $_BOA_REPO_GIT_URL =~ drupal ]] ; then
    _BOA_REPO_GIT_URL_LOCAL="git://github.com/omega8cc"
  else
    _BOA_REPO_GIT_URL_LOCAL="$_BOA_REPO_GIT_URL"
  fi
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  echo "api = 2" > fserver.make
  echo "core = 6.x" >> fserver.make
  echo "projects[drupal][type] = \"core\"" >> fserver.make
  echo "projects[feature_server][type] = \"profile\"" >> fserver.make
  echo "projects[feature_server][download][type] = \"git\"" >> fserver.make
  echo "projects[feature_server][download][url] = \"$_BOA_REPO_GIT_URL_LOCAL/feature_server.git\"" >> fserver.make
  $_ROOT/tools/drush/drush make fserver.make fserver-$_SMALLCORE6 &> /dev/null
  rm -f fserver.make
  cd $_CORE/fserver-$_SMALLCORE6
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/fserver-$_SMALLCORE6/ &> /dev/null
  rm -f $_CORE/fserver-$_SMALLCORE6/*.txt
  rm -f -r ./profiles/default
  rm -f -r $_CORE/fserver-$_SMALLCORE6/modules/cookie_cache_bypass
  create_dirs
  cd ./profiles/feature_server/themes
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/singular.patch ./
  patch -p0 <./singular.patch &> /dev/null
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/patches/singular.mft.patch ./
  patch -p0 <./singular.mft.patch &> /dev/null
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/fserver-$_SMALLCORE6
cd $_ROOT/distro/$_THIS_CORE/fserver-$_SMALLCORE6
create_symlinks
msg "STATUS: $_F_FSERVER installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_FSERVER installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### ManagingNews
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ MNS ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/managingnews-$_MANAGINGNEWS/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_MANAGINGNEWS - http://managingnews.com" ; then
true
msg "STATUS: $_F_MANAGINGNEWS install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/managingnews-$_MANAGINGNEWS"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  wget -q -U iCab http://managingnews.com/files/managingnews-$_MANAGINGNEWS.zip
  unzip -qq managingnews-$_MANAGINGNEWS.zip
  rm -f managingnews-$_MANAGINGNEWS.zip
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/managingnews-$_MANAGINGNEWS/ &> /dev/null
  cd $_CORE/managingnews-$_MANAGINGNEWS/profiles/managingnews/modules/contrib
  rm -f -r views spaces
  wget -q -U iCab http://ftp.drupal.org/files/projects/views-6.x-2.12.tar.gz
  wget -q -U iCab http://ftp.drupal.org/files/projects/spaces-6.x-3.1.tar.gz
  tar -xzf views-6.x-2.12.tar.gz &> /dev/null
  tar -xzf spaces-6.x-3.1.tar.gz &> /dev/null
  rm -f *.tar.gz
  cd $_CORE/managingnews-$_MANAGINGNEWS/
  rm -f $_CORE/managingnews-$_MANAGINGNEWS/*.txt
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'admin', 'path_alias_cache',/g" ./profiles/managingnews/managingnews.profile
  rm -f -r ./profiles/default
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/managingnews-$_MANAGINGNEWS
cd $_ROOT/distro/$_THIS_CORE/managingnews-$_MANAGINGNEWS
create_symlinks
msg "STATUS: $_F_MANAGINGNEWS installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_MANAGINGNEWS installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### NodeStream Make
#
if [ "$_ALLOW_FOUR" = "YES" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ NSM ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/nodestream-$_NODESTREAM/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_NODESTREAM - http://nodestream.org" ; then
true
msg "STATUS: $_F_NODESTREAM install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/nodestream-$_NODESTREAM"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/makefiles/nodestream.make ./
  $_ROOT/tools/drush/drush make nodestream.make nodestream-$_NODESTREAM &> /dev/null
  rm -f nodestream.make
  cd $_CORE/nodestream-$_NODESTREAM
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/nodestream-$_NODESTREAM/ &> /dev/null
  rm -f $_CORE/nodestream-$_NODESTREAM/*.txt
  rm -f -r ./profiles/default
  rm -f -r $_CORE/nodestream-$_NODESTREAM/modules/cookie_cache_bypass
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/nodestream-$_NODESTREAM
cd $_ROOT/distro/$_THIS_CORE/nodestream-$_NODESTREAM
create_symlinks
msg "STATUS: $_F_NODESTREAM installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_NODESTREAM installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### OpenPublish
#
# if [ "$_PLATFORMS_LIST" = "ALL" ] ; then
# if [ "$_ALLOW_FOUR" = "YES" ] ; then
# echo " "
# if prompt_yes_no "$_F_OPENPUBLISH - http://openpublishapp.com" ; then
# true
# msg "STATUS: $_F_OPENPUBLISH install in progress, please wait..."
# mrun "sleep 2"
# _CORE_DISTRO="$_CORE/openpublish-$_OPENPUBLISH"
# if [ ! -d "$_CORE_DISTRO" ] ; then
#   if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
#     prepare_pressflow_core
#   fi
#   cd $_CORE
#   wget -q -U iCab http://files.aegir.cc/dev/openpublish-$_OPENPUBLISH.tar.gz
#   tar -xzf openpublish-$_OPENPUBLISH.tar.gz
#   rm -f openpublish-$_OPENPUBLISH.tar.gz
#   #mv $_CORE/openpublish $_CORE/openpublish-$_OPENPUBLISH
#   cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/openpublish-$_OPENPUBLISH/ &> /dev/null
#   cd $_CORE/openpublish-$_OPENPUBLISH
#   rm -f $_CORE/openpublish-$_OPENPUBLISH/*.txt
#   sed -i "s/'profile',/'profile', 'cache', 'syslog', 'robotstxt', 'path_alias_cache',/g" ./profiles/openpublish/openpublish.profile
#   rm -f -r ./profiles/default
#   create_dirs
# fi
# mkdir -p $_ROOT/distro/$_THIS_CORE/openpublish-$_OPENPUBLISH
# cd $_ROOT/distro/$_THIS_CORE/openpublish-$_OPENPUBLISH
# create_symlinks
# if [ ! -L "./sites/all/themes/openpublish_theme" ] ; then
#   ln -s $_CORE_DISTRO/profiles/openpublish/themes/openpublish_theme ./sites/all/themes/openpublish_theme
# fi
# msg "STATUS: $_F_OPENPUBLISH installation completed"
# mrun "sleep 2"
# else
#   msg "STATUS: $_F_OPENPUBLISH installation skipped"
#   mrun "sleep 1"
# fi
# fi
# fi


###---### OpenScholar
#
if [ "$_ALLOW_FOUR" = "YES" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ OSR ]] ; then
if [ ! -L "$_ROOT/distro/$_THIS_CORE/openscholar-$_OPENSCHOLAR/sites/all/libraries/shadowbox" ] ; then
echo " "
if prompt_yes_no "$_F_OPENSCHOLAR - http://openscholar.harvard.edu" ; then
true
msg "STATUS: $_F_OPENSCHOLAR install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/openscholar-$_OPENSCHOLAR"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  wget -q -U iCab http://files.aegir.cc/dev/distro/scholar/openscholar-$_OPENSCHOLAR.tar.gz
  tar -xzf openscholar-$_OPENSCHOLAR.tar.gz
  rm -f openscholar-$_OPENSCHOLAR.tar.gz
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/openscholar-$_OPENSCHOLAR/ &> /dev/null
  cd $_CORE/openscholar-$_OPENSCHOLAR
  rm -f $_CORE/openscholar-$_OPENSCHOLAR/*.txt
  sed -i "s/'features',/'features', 'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/openscholar/openscholar.profile
  rm -f -r ./profiles/default
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/openscholar-$_OPENSCHOLAR
cd $_ROOT/distro/$_THIS_CORE/openscholar-$_OPENSCHOLAR
create_symlinks
if [ ! -L "./sites/all/libraries/shadowbox" ] ; then
  ln -s $_CORE_DISTRO/profiles/openscholar/libraries/shadowbox ./sites/all/libraries/shadowbox
fi
if [ ! -L "./sites/all/libraries/tinymce" ] ; then
  ln -s $_CORE_DISTRO/profiles/openscholar/libraries/tinymce ./sites/all/libraries/tinymce
fi
msg "STATUS: $_F_OPENSCHOLAR installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_OPENSCHOLAR installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### Conference Organizing Distribution
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ COD ]] ; then
if [ ! -L "$_ROOT/distro/$_THIS_CORE/cod-$_COD/sites/all/libraries/jquery.ui" ] ; then
echo " "
if prompt_yes_no "$_F_COD - http://usecod.com" ; then
true
msg "STATUS: $_F_COD install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/cod-$_COD"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  wget -q -U iCab http://files.aegir.cc/dev/distro/cod-$_COD.tar.gz
  tar -xzf cod-$_COD.tar.gz
  rm -f cod-$_COD.tar.gz
  if [ -d "$_CORE/cod" ] ; then
    mv $_CORE/cod $_CORE/cod-$_COD
  fi
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/cod-$_COD/ &> /dev/null
  cd $_CORE/cod-$_COD
  rm -f $_CORE/cod-$_COD/*.txt
  rm -f -r $_CORE/cod-$_COD/modules/cookie_cache_bypass
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/cod/cod.profile
  sed -i "s/Conference Organizing Distribution/Conference/g" ./profiles/cod/cod.profile
  rm -f -r ./profiles/default
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/cod-$_COD
cd $_ROOT/distro/$_THIS_CORE/cod-$_COD
create_symlinks
if [ ! -L "$_ROOT/distro/$_THIS_CORE/cod-$_COD/sites/all/libraries/jquery.ui" ] ; then
  mkdir -p $_ROOT/distro/$_THIS_CORE/cod-$_COD/sites/all/libraries
  ln -s $_CORE_DISTRO/profiles/cod/modules/contrib/jquery_ui/jquery.ui $_ROOT/distro/$_THIS_CORE/cod-$_COD/sites/all/libraries/jquery.ui
fi
msg "STATUS: $_F_COD installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_COD installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### Open Church
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ OCH ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_OPENCHURCH - http://openchurchsite.com" ; then
true
msg "STATUS: $_F_OPENCHURCH install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/openchurch-$_OPENCHURCH"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  wget -q -U iCab http://files.aegir.cc/dev/distro/openchurch-$_OPENCHURCH.tar.gz
  tar -xzf openchurch-$_OPENCHURCH.tar.gz
  rm -f openchurch-$_OPENCHURCH.tar.gz
  if [ -d "$_CORE/openchurch" ] ; then
    mv $_CORE/openchurch $_CORE/openchurch-$_OPENCHURCH
  fi
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/openchurch-$_OPENCHURCH/ &> /dev/null
  cd $_CORE/openchurch-$_OPENCHURCH
  rm -f $_CORE/openchurch-$_OPENCHURCH/*.txt
  rm -f -r $_CORE/openchurch-$_OPENCHURCH/modules/cookie_cache_bypass
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/openchurch/openchurch.profile
  rm -f -r ./profiles/default
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH
cd $_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH
create_symlinks
# if [ ! -L "$_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH/sites/all/libraries/jquery.ui" ] ; then
#   mkdir -p $_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH/sites/all/libraries
#   ln -s $_CORE_DISTRO/profiles/cod/modules/contrib/jquery_ui/jquery.ui $_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH/sites/all/libraries/jquery.ui
# fi
msg "STATUS: $_F_OPENCHURCH installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_OPENCHURCH installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### CiviCRM 3
#
if [ "$_CLIENT_CORES" -ge "2" ] && [ "$_CLIENT_OPTION" = "SSD" ] && [[ "$_DOMAIN" =~ ".host8." ]] ; then
  _ALLOW_CIVICRM=YES
elif [ "$_CLIENT_CORES" -ge "4" ] && [ "$_CLIENT_OPTION" != "SSD" ] ; then
  if [[ "$_DOMAIN" =~ ".host8." ]] ; then
    _ALLOW_CIVICRM=NO
  else
    _ALLOW_CIVICRM=YES
  fi
else
  _ALLOW_CIVICRM=NO
fi
if [ "$_ALLOW_CIVICRM" = "YES" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ CC3 ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM6/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_CIVICRM6 - http://civicrm.org" ; then
true
msg "STATUS: $_F_CIVICRM6 install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/civicrm-$_CIVICRM6"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/makefiles/civicrm3.make ./
  $_ROOT/tools/drush/drush make civicrm3.make civicrm-$_CIVICRM6 &> /dev/null
  rm -f civicrm3.make
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/civicrm-$_CIVICRM6/ &> /dev/null
  cd $_CORE/civicrm-$_CIVICRM6
  rm -f -r $_CORE/civicrm-$_CIVICRM6/modules/cookie_cache_bypass
  rm -f $_CORE/civicrm-$_CIVICRM6/*.txt
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/default/default.profile
  sed -i "s/'name' => 'Pressflow',/'name' => 'Pressflow',\n    'old_short_name' => 'acquia',/g" ./profiles/default/default.profile
  cd $_CORE/civicrm-$_CIVICRM6
  create_dirs
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM6
cd $_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM6
create_symlinks
msg "STATUS: $_F_CIVICRM6 installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_CIVICRM6 installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### CiviCRM 4
#
if [ "$_CLIENT_CORES" -ge "2" ] && [ "$_CLIENT_OPTION" = "SSD" ] && [[ "$_DOMAIN" =~ ".host8." ]] ; then
  _ALLOW_CIVICRM=YES
elif [ "$_CLIENT_CORES" -ge "4" ] && [ "$_CLIENT_OPTION" != "SSD" ] ; then
  if [[ "$_DOMAIN" =~ ".host8." ]] ; then
    _ALLOW_CIVICRM=NO
  else
    _ALLOW_CIVICRM=YES
  fi
else
  _ALLOW_CIVICRM=NO
fi
if [ "$_ALLOW_CIVICRM" = "YES" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ CC4 ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7" ] ; then
echo " "
if prompt_yes_no "$_F_CIVICRM7 - http://civicrm.org" ; then
true
msg "STATUS: $_F_CIVICRM7 install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7"
if [ ! -d "$_CORE_DISTRO" ] ; then
  cd $_CORE
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/makefiles/civicrm4.make ./
  $_ROOT/tools/drush/drush make civicrm4.make civicrm-$_CIVICRM7-$_SMALLCORE7 &> /dev/null
  rm -f civicrm4.make
  cd $_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7
  rm -f $_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7/*.txt
  ln -s $_CORE/o_contrib_seven modules/o_contrib_seven
  rm -f -r $_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7/profiles/testing
  for Files in `find $_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7/profiles -type f`
  do
    sed -i "s/Minimal/Drupal 7 Minimal/g"   $Files
    sed -i "s/Standard/Drupal 7 Standard/g" $Files
  done
  create_dirs
  themes_for_d7
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7
cd $_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7
create_symlinks
create_d7_symlinks
rm -f boost_stats.php
msg "STATUS: $_F_CIVICRM7 installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_CIVICRM7 installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### Prosepoint
#
if [ "$_CLIENT_CORES" -ge "1" ] ; then
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ PPT ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/prosepoint-$_PROSEPOINT/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_PROSEPOINT - http://prosepoint.org" ; then
true
msg "STATUS: $_F_PROSEPOINT install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/prosepoint-$_PROSEPOINT"
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  wget -q -U iCab http://launchpad.net/prosepoint/trunk/$_PROSEPOINT/+download/prosepoint-$_PROSEPOINT.tar.gz
  tar -xzf prosepoint-$_PROSEPOINT.tar.gz
  rm -f prosepoint-$_PROSEPOINT.tar.gz
  cd $_CORE/prosepoint-$_PROSEPOINT
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/prosepoint-$_PROSEPOINT/ &> /dev/null
  rm -f $_CORE/prosepoint-$_PROSEPOINT/*.txt
  rm -f -r ./profiles/default
  create_dirs
  ln -s /data/all/000/translations $_CORE/prosepoint-$_PROSEPOINT/profiles/prosepoint/translations &> /dev/null
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/prosepoint-$_PROSEPOINT
cd $_ROOT/distro/$_THIS_CORE/prosepoint-$_PROSEPOINT
create_symlinks
msg "STATUS: $_F_PROSEPOINT installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_PROSEPOINT installation skipped"
  mrun "sleep 1"
fi
fi
fi
fi


###---### Ubercart
#
if [ "$_PLATFORMS_LIST" = "ALL" ] || [[ $_PLATFORMS_LIST =~ UCT ]] ; then
if [ ! -d "$_ROOT/distro/$_THIS_CORE/ubercart-$_UBERCART-$_SMALLCORE6/modules/path_alias_cache" ] ; then
echo " "
if prompt_yes_no "$_F_UBERCART - http://ubercart.org" ; then
true
msg "STATUS: $_F_UBERCART install in progress, please wait..."
mrun "sleep 2"
_CORE_DISTRO="$_CORE/ubercart-$_UBERCART-$_SMALLCORE6"
if [ -d "$_CORE_DISTRO" ] && [ ! -e "$_CORE_DISTRO/fixed_1.log" ] ; then
  rm -f -r $_CORE_DISTRO
fi
if [ ! -d "$_CORE_DISTRO" ] ; then
  if [ ! -d "/data/src/$_THIS_CORE/pressflow-6" ] ; then
    prepare_pressflow_core
  fi
  cd $_CORE
  wget -q -U iCab http://files.aegir.cc/dev/distro/ubercart-$_UBERCART.tar.gz
  tar -xzf ubercart-$_UBERCART.tar.gz
  rm -f ubercart-$_UBERCART.tar.gz
  mv ubercart-$_UBERCART ubercart-$_UBERCART-$_SMALLCORE6
  cd $_CORE/ubercart-$_UBERCART-$_SMALLCORE6
  cp -af /data/src/$_THIS_CORE/pressflow-6/* $_CORE/ubercart-$_UBERCART-$_SMALLCORE6/ &> /dev/null
  rm -f $_CORE/ubercart-$_UBERCART-$_SMALLCORE6/*.txt
  sed -i "s/'dblog',/'cache', 'syslog', 'robotstxt', 'filefield_nginx_progress', 'path_alias_cache',/g" ./profiles/uberdrupal/uberdrupal.profile
  rm -f -r ./profiles/default
  create_dirs
  ln -s /data/all/000/translations $_CORE/ubercart-$_UBERCART-$_SMALLCORE6/profiles/uberdrupal/translations
  touch $_CORE_DISTRO/fixed_1.log
fi
mkdir -p $_ROOT/distro/$_THIS_CORE/ubercart-$_UBERCART-$_SMALLCORE6
cd $_ROOT/distro/$_THIS_CORE/ubercart-$_UBERCART-$_SMALLCORE6
create_symlinks
msg "STATUS: $_F_UBERCART installation completed"
mrun "sleep 2"
else
  msg "STATUS: $_F_UBERCART installation skipped"
  mrun "sleep 1"
fi
fi
fi


###---### remove some module and themes for all
#
echo " "
msg "$_STATUS C: remove some default themes for all"
mrun "sleep 2"
rm -f -r $_CORE/o_contrib/image
rm -f -r $_CORE/*/themes/bluemarine
rm -f -r $_CORE/*/themes/chameleon
rm -f -r $_CORE/*/themes/pushbutton
rm -f -r $_CORE/*/scripts
rm -f $_CORE/*/themes/README.txt
rm -f $_CORE/*.make
rm -f $_CORE/*.tar.gz
cd $_CORE
find . -name .svn -exec rm -rf {} \; &> /dev/null
find . -name .bzr -exec rm -rf {} \; &> /dev/null
find . -name .git -exec rm -rf {} \; &> /dev/null
find . -name "._*" -type f | xargs rm -rf


###---### Save & verify platforms
#
msg "$_STATUS C: Save & Verify Platforms, please wait..."
mrun "sleep 2"
_LOCAL_STATUS="NOT_SET"
if [ -e "/var/run/aegir_upgrade.pid" ] ; then
  _LOCAL_STATUS=INIT
fi
if [ "$_LOCAL_STATUS" = "INIT" ] ; then
  _THIS_HOSTMASTER="$_AEGIR_ROOT/sites/$_DOMAIN"
  #msg "_THIS_HOSTMASTER is read static $_THIS_HOSTMASTER because _LOCAL_STATUS is $_LOCAL_STATUS"
else
  if [ -e "$_ROOT/.drush/hostmaster.alias.drushrc.php" ] ; then
    _THIS_HOSTMASTER=`cat $_ROOT/.drush/hostmaster.alias.drushrc.php | grep 'site_path' | cut -d: -f2 | awk '{ print $3}'`
    _THIS_HOSTMASTER=`echo $_THIS_HOSTMASTER | sed "s/[\,']//g"`
    #msg "_THIS_HOSTMASTER is $_THIS_HOSTMASTER - read from $_ROOT/.drush/hostmaster.alias.drushrc.php"
  else
    _THIS_HOSTMASTER="$_AEGIR_ROOT/sites/$_DOMAIN"
    #msg "_THIS_HOSTMASTER is read static $_THIS_HOSTMASTER"
  fi
fi
if [ -d "$_THIS_HOSTMASTER" ] ; then
  #msg "_THIS_HOSTMASTER is $_THIS_HOSTMASTER (1)"
  cd $_THIS_HOSTMASTER
else
  _THIS_HOSTMASTER="$_PREV_AEGIR_ROOT/sites/$_DOMAIN"
  #msg "_THIS_HOSTMASTER is $_THIS_HOSTMASTER (2)"
  cd $_THIS_HOSTMASTER
fi
DRUSHC="$_ROOT/tools/drush/drush"
if [ $_DRUSH_FAMILY = "3" ] ; then
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/make_platform_3.php.txt ./
  mv -f make_platform_3.php.txt make_platform.php &> /dev/null
else
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/make_platform.php.txt ./
  mv -f make_platform.php.txt make_platform.php &> /dev/null
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/acquia-$_SMALLCORE6" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/acquia-$_SMALLCORE6/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_ACQUIA" acquia $_ROOT/distro/$_THIS_CORE/acquia-$_SMALLCORE6 &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/acquia-$_ACQUIA_SEVEN" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/acquia-$_ACQUIA_SEVEN/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_ACQUIA_SEVEN" acquia $_ROOT/distro/$_THIS_CORE/acquia-$_ACQUIA_SEVEN &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/atrium-$_OPENATRIUM" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/atrium-$_OPENATRIUM/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_ATRIUM" openatrium $_ROOT/distro/$_THIS_CORE/atrium-$_OPENATRIUM &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-dev" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-dev/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_DRUPAL6_D" default $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-dev &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-stage" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-stage/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_DRUPAL6_S" default $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-stage &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ ! -d "$_ROOT/distro/$_THIS_CORE/pressflow" ] ; then
  if [ -d "$_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-prod" ] ; then
    if [ ! -e "$_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-prod/drushrc.php" ] ; then
      $DRUSHC php-script make_platform "$_F_DRUPAL6_P" default $_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-prod &> /dev/null
      mrun "sleep 5"
    fi
  fi
elif [ ! -d "$_ROOT/distro/$_THIS_CORE/pressflow-$_SMALLCORE6-prod" ] ; then
  if [ -d "$_ROOT/distro/$_THIS_CORE/pressflow" ] ; then
    if [ ! -e "$_ROOT/distro/$_THIS_CORE/pressflow/drushrc.php" ] ; then
      $DRUSHC php-script make_platform "$_F_DRUPAL6_P" default $_ROOT/distro/$_THIS_CORE/pressflow &> /dev/null
      mrun "sleep 5"
    fi
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7D" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7D/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_DRUPAL7_D" standard $_ROOT/distro/$_THIS_CORE/$_DRUPAL7D &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7S" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7S/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_DRUPAL7_S" standard $_ROOT/distro/$_THIS_CORE/$_DRUPAL7S &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ ! -d "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7" ] ; then
  if [ -d "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7P" ] ; then
    if [ ! -e "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7P/drushrc.php" ] ; then
      $DRUSHC php-script make_platform "$_F_DRUPAL7_P" standard $_ROOT/distro/$_THIS_CORE/$_DRUPAL7P &> /dev/null
      mrun "sleep 5"
    fi
  fi
elif [ ! -d "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7P" ] ; then
  if [ -d "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7" ] ; then
    if [ ! -e "$_ROOT/distro/$_THIS_CORE/$_DRUPAL7/drushrc.php" ] ; then
      $DRUSHC php-script make_platform "$_F_DRUPAL7_P" standard $_ROOT/distro/$_THIS_CORE/$_DRUPAL7 &> /dev/null
      mrun "sleep 5"
    fi
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/pressflow-$_DRUPAL5" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/pressflow-$_DRUPAL5/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_DRUPAL5" default $_ROOT/distro/$_THIS_CORE/pressflow-$_DRUPAL5 &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_COMMONS" drupal_commons $_ROOT/distro/$_THIS_CORE/acquia_commons-$_COMMONS &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/fserver-$_SMALLCORE6" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/fserver-$_SMALLCORE6/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_FSERVER" feature_server $_ROOT/distro/$_THIS_CORE/fserver-$_SMALLCORE6 &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/managingnews-$_MANAGINGNEWS" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/managingnews-$_MANAGINGNEWS/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_MANAGINGNEWS" managingnews $_ROOT/distro/$_THIS_CORE/managingnews-$_MANAGINGNEWS &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/nodestream-$_NODESTREAM" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/nodestream-$_NODESTREAM/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_NODESTREAM" nodestream $_ROOT/distro/$_THIS_CORE/nodestream-$_NODESTREAM &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/commerce-$_COMMERCE-$_SMALLCORE7" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/commerce-$_COMMERCE-$_SMALLCORE7/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_COMMERCE" commerce $_ROOT/distro/$_THIS_CORE/commerce-$_COMMERCE-$_SMALLCORE7 &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/openpublish-$_OPENPUBLISH" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/openpublish-$_OPENPUBLISH/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_OPENPUBLISH" openpublish $_ROOT/distro/$_THIS_CORE/openpublish-$_OPENPUBLISH &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_OPENPUBLIC" openpublic $_ROOT/distro/$_THIS_CORE/openpublic-$_OPENPUBLIC &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/openenterprise-$_OPENENTERPRISE" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/openenterprise-$_OPENENTERPRISE/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_OPENENTERPRISE" openenterprise $_ROOT/distro/$_THIS_CORE/openenterprise-$_OPENENTERPRISE &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/cod-$_COD" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/cod-$_COD/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_COD" cod $_ROOT/distro/$_THIS_CORE/cod-$_COD &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_OPENCHURCH" openchurch $_ROOT/distro/$_THIS_CORE/openchurch-$_OPENCHURCH &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM6" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM6/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_CIVICRM6" default $_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM6 &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_CIVICRM7" default $_ROOT/distro/$_THIS_CORE/civicrm-$_CIVICRM7-$_SMALLCORE7 &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/videola-$_VIDEOLA" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/videola-$_VIDEOLA/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_VIDEOLA" videola $_ROOT/distro/$_THIS_CORE/videola-$_VIDEOLA &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/openscholar-$_OPENSCHOLAR" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/openscholar-$_OPENSCHOLAR/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_OPENSCHOLAR" openscholar $_ROOT/distro/$_THIS_CORE/openscholar-$_OPENSCHOLAR &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/prosepoint-$_PROSEPOINT" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/prosepoint-$_PROSEPOINT/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_PROSEPOINT" prosepoint $_ROOT/distro/$_THIS_CORE/prosepoint-$_PROSEPOINT &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -d "$_ROOT/distro/$_THIS_CORE/ubercart-$_UBERCART-$_SMALLCORE6" ] ; then
  if [ ! -e "$_ROOT/distro/$_THIS_CORE/ubercart-$_UBERCART-$_SMALLCORE6/drushrc.php" ] ; then
    $DRUSHC php-script make_platform "$_F_UBERCART" uberdrupal $_ROOT/distro/$_THIS_CORE/ubercart-$_UBERCART-$_SMALLCORE6 &> /dev/null
    mrun "sleep 5"
  fi
fi
if [ -e "/var/run/aegir_upgrade.pid" ] ; then
  _PLATF_IMP=$(ls -la /data/u | grep $_USER | cut -d'>' -f2 | sort | uniq | awk '{ print $1}')
  for _PLATF in $_PLATF_IMP ; do
    if [[ $_PLATF =~ aegir ]] ; then
	  _FOUND_HM=YES
    else
      _PLATF_NAME=${_PLATF##*/}
      $DRUSHC php-script make_platform "$_PLATF_NAME ($RANDOM)" default $_PLATF
      mrun "sleep 2"
      # &> /dev/null
    fi
  done
fi
rm -f make_platform.php


###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright (C) 2010-2011 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###
